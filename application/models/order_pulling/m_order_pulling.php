<?php 
if (!defined('BASEPATH'))
 exit('No direct script access allowed');
	/**
	* Order Pulling Model
	*/
	class M_Order_Pulling extends CI_Model
	{

		public function __construct(){
		parent::__construct();
		$this->load->database();
		}
		public function order_details($radio){

			if(isset($radio) && is_numeric($radio)){
					//$query = $this->db->query("SELECT EB.LZ_SELLER_ACCT_ID,SDD.* FROM (SELECT LM.EXCEL_FILE_NAME, SD.WIZ_ERP_CODE, SD.SALES_RECORD_NUMBER, SD.USER_ID, SD.BUYER_FULLNAME, SD.BUYER_PHONE_NUMBER, SD.BUYER_EMAIL, SD.BUYER_ADDRESS1, SD.BUYER_ADDRESS2, SD.BUYER_CITY, SD.BUYER_STATE, SD.BUYER_ZIP, SD.BUYER_COUNTRY, SD.ORDER_ID, SD.LZ_SALELOAD_ID, SD.ITEM_ID, SD.TRANSACTION_ID, SD.ITEM_TITLE, SD.QUANTITY, SD.SALE_PRICE, SD.SHIPPING_AND_HANDLING, NVL(SP.PULLING_QTY, 0) PULLING_QTY, NVL(SP.CANCEL_QTY, 0) CANCEL_QTY, SD.SALES_TAX, SD.INSURANCE, SD.TOTAL_PRICE, SD.PAYMENT_METHOD, SD.PAYPAL_TRANSACTION_ID, TO_CHAR(SD.SALE_DATE, 'DD-MM-YYYY HH24:MI:SS') AS SALE_DATE, SD.CHECKOUT_DATE, SD.PAID_ON_DATE, SD.SHIPPED_ON_DATE, SD.SHIPPING_SERVICE, SD.FEEDBACK_LEFT, SD.FEEDBACK_RECEIVED, SD.NOTES_TO_YOURSELF, SD.CUSTOM_LABEL, SD.LISTED_ON, SD.SOLD_ON, SD.VARIATION_DETAILS, SD.EBAY_FEE_PERC, SD.PAYPAL_FEE_PERC, SD.PAYPAL_PER_TRANS_FEE FROM LZ_SALESLOAD_DET SD, LZ_SALESLOAD_MT LM, (SELECT SALES_RECORD_NO, SUM(NVL(PULLING_QTY, 0)) PULLING_QTY, SUM(NVL(CANCEL_QTY, 0)) CANCEL_QTY FROM LZ_SALES_PULLING GROUP BY SALES_RECORD_NO) SP WHERE SD.SALES_RECORD_NUMBER = SP.SALES_RECORD_NO(+) AND LM.LZ_SALELOAD_ID = SD.LZ_SALELOAD_ID ORDER BY SALES_RECORD_NUMBER) SDD,(SELECT DISTINCT E.EBAY_ITEM_ID,E.LZ_SELLER_ACCT_ID FROM EBAY_LIST_MT E) EB WHERE NVL(SDD.QUANTITY, 0) <> (NVL(SDD.PULLING_QTY, 0) + NVL(SDD.CANCEL_QTY, 0)) AND SDD.ITEM_ID = EB.EBAY_ITEM_ID AND EB.LZ_SELLER_ACCT_ID = $radio ORDER BY SDD.SALE_DATE DESC NULLS LAST");
					$query = $this->db->query("SELECT EB.LZ_SELLER_ACCT_ID, SDD.* FROM (SELECT LM.EXCEL_FILE_NAME, SD.WIZ_ERP_CODE, SD.SALES_RECORD_NUMBER, SD.USER_ID, SD.BUYER_FULLNAME, SD.BUYER_PHONE_NUMBER, SD.BUYER_EMAIL, SD.BUYER_ADDRESS1, SD.BUYER_ADDRESS2, SD.BUYER_CITY, SD.BUYER_STATE, SD.BUYER_ZIP, SD.BUYER_COUNTRY, SD.ORDER_ID, SD.LZ_SALELOAD_ID, SD.ITEM_ID, SD.TRANSACTION_ID, SD.ITEM_TITLE, SD.QUANTITY, SD.SALE_PRICE, SD.SHIPPING_AND_HANDLING, NVL(SP.PULLING_QTY, 0) PULLING_QTY, NVL(SP.CANCEL_QTY, 0) CANCEL_QTY, SD.SALES_TAX, SD.INSURANCE, SD.TOTAL_PRICE, SD.PAYMENT_METHOD, SD.PAYPAL_TRANSACTION_ID, TO_CHAR(SD.SALE_DATE, 'DD-MM-YYYY HH24:MI:SS') AS SALE_DATE, SD.CHECKOUT_DATE, SD.PAID_ON_DATE, SD.SHIPPED_ON_DATE, SD.SHIPPING_SERVICE, SD.FEEDBACK_LEFT, SD.FEEDBACK_RECEIVED, SD.NOTES_TO_YOURSELF, SD.CUSTOM_LABEL, SD.LISTED_ON, SD.SOLD_ON, SD.VARIATION_DETAILS, SD.EBAY_FEE_PERC, SD.PAYPAL_FEE_PERC, SD.PAYPAL_PER_TRANS_FEE, B.BARCODE_NO, 'W' || WA.WAREHOUSE_NO || '-' || M.RACK_NO || '-R' || RO.ROW_NO || '-' || I.BIN_TYPE || '-' || I.BIN_NO BIN_NAME, P.PACKING_NAME FROM LZ_SALESLOAD_DET SD, LZ_SALESLOAD_MT LM, LZ_BARCODE_MT B, BIN_MT I, LZ_RACK_ROWS RO, RACK_MT M, WAREHOUSE_MT WA, LZ_PACKING_TYPE_MT P, (SELECT SALES_RECORD_NO, SUM(NVL(PULLING_QTY, 0)) PULLING_QTY, SUM(NVL(CANCEL_QTY, 0)) CANCEL_QTY FROM LZ_SALES_PULLING GROUP BY SALES_RECORD_NO) SP WHERE SD.SALES_RECORD_NUMBER = SP.SALES_RECORD_NO(+) AND LM.LZ_SALELOAD_ID = SD.LZ_SALELOAD_ID AND SD.SALES_RECORD_NUMBER = B.SALE_RECORD_NO(+) AND I.CURRENT_RACK_ROW_ID = RO.RACK_ROW_ID(+) AND RO.RACK_ID = M.RACK_ID(+) AND M.WAREHOUSE_ID = WA.WAREHOUSE_ID(+) AND B.BIN_ID = I.BIN_ID(+) AND B.PULLING_ID IS NULL AND B.PACKING_ID = P.PACKING_ID(+) AND SD.GNRTD_DC_ID IS NULL AND SD.TRACKING_NUMBER IS NULL ORDER BY SALES_RECORD_NUMBER) SDD, (SELECT DISTINCT E.EBAY_ITEM_ID, E.LZ_SELLER_ACCT_ID FROM EBAY_LIST_MT E) EB WHERE NVL(SDD.QUANTITY, 0) <> (NVL(SDD.PULLING_QTY, 0) + NVL(SDD.CANCEL_QTY, 0)) AND SDD.ITEM_ID = EB.EBAY_ITEM_ID AND EB.LZ_SELLER_ACCT_ID IS NOT NULL AND EB.LZ_SELLER_ACCT_ID = $radio ORDER BY SDD.SALE_DATE DESC NULLS LAST "); 
					$this->session->set_userdata('awaiting',$radio);
					return $query->result_array();


			}else{
					$query = $this->db->query("SELECT EB.LZ_SELLER_ACCT_ID, SDD.* FROM (SELECT LM.EXCEL_FILE_NAME, SD.WIZ_ERP_CODE, SD.SALES_RECORD_NUMBER, SD.USER_ID, SD.BUYER_FULLNAME, SD.BUYER_PHONE_NUMBER, SD.BUYER_EMAIL, SD.BUYER_ADDRESS1, SD.BUYER_ADDRESS2, SD.BUYER_CITY, SD.BUYER_STATE, SD.BUYER_ZIP, SD.BUYER_COUNTRY, SD.ORDER_ID, SD.LZ_SALELOAD_ID, SD.ITEM_ID, SD.TRANSACTION_ID, SD.ITEM_TITLE, SD.QUANTITY, SD.SALE_PRICE, SD.SHIPPING_AND_HANDLING, NVL(SP.PULLING_QTY, 0) PULLING_QTY, NVL(SP.CANCEL_QTY, 0) CANCEL_QTY, SD.SALES_TAX, SD.INSURANCE, SD.TOTAL_PRICE, SD.PAYMENT_METHOD, SD.PAYPAL_TRANSACTION_ID, TO_CHAR(SD.SALE_DATE, 'DD-MM-YYYY HH24:MI:SS') AS SALE_DATE, SD.CHECKOUT_DATE, SD.PAID_ON_DATE, SD.SHIPPED_ON_DATE, SD.SHIPPING_SERVICE, SD.FEEDBACK_LEFT, SD.FEEDBACK_RECEIVED, SD.NOTES_TO_YOURSELF, SD.CUSTOM_LABEL, SD.LISTED_ON, SD.SOLD_ON, SD.VARIATION_DETAILS, SD.EBAY_FEE_PERC, SD.PAYPAL_FEE_PERC, SD.PAYPAL_PER_TRANS_FEE, B.BARCODE_NO, 'W' || WA.WAREHOUSE_NO || '-' || M.RACK_NO || '-R' || RO.ROW_NO || '-' || I.BIN_TYPE || '-' || I.BIN_NO BIN_NAME, P.PACKING_NAME FROM LZ_SALESLOAD_DET SD, LZ_SALESLOAD_MT LM, LZ_BARCODE_MT B, BIN_MT I, LZ_RACK_ROWS RO, RACK_MT M, WAREHOUSE_MT WA, LZ_PACKING_TYPE_MT P, (SELECT SALES_RECORD_NO, SUM(NVL(PULLING_QTY, 0)) PULLING_QTY, SUM(NVL(CANCEL_QTY, 0)) CANCEL_QTY FROM LZ_SALES_PULLING GROUP BY SALES_RECORD_NO) SP WHERE SD.SALES_RECORD_NUMBER = SP.SALES_RECORD_NO(+) AND LM.LZ_SALELOAD_ID = SD.LZ_SALELOAD_ID AND SD.SALES_RECORD_NUMBER = B.SALE_RECORD_NO(+) AND I.CURRENT_RACK_ROW_ID = RO.RACK_ROW_ID(+) AND RO.RACK_ID = M.RACK_ID(+) AND M.WAREHOUSE_ID = WA.WAREHOUSE_ID(+) AND B.BIN_ID = I.BIN_ID(+) AND B.PULLING_ID IS NULL AND B.PACKING_ID = P.PACKING_ID(+) AND SD.GNRTD_DC_ID IS NULL AND SD.TRACKING_NUMBER IS NULL ORDER BY SALES_RECORD_NUMBER) SDD, (SELECT DISTINCT E.EBAY_ITEM_ID, E.LZ_SELLER_ACCT_ID FROM EBAY_LIST_MT E) EB WHERE NVL(SDD.QUANTITY, 0) <> (NVL(SDD.PULLING_QTY, 0) + NVL(SDD.CANCEL_QTY, 0)) AND SDD.ITEM_ID = EB.EBAY_ITEM_ID AND EB.LZ_SELLER_ACCT_ID IS NOT NULL ORDER BY SDD.SALE_DATE DESC NULLS LAST ");
					return $query->result_array();

			}
			

		}
		public function partially_pulled(){

			//$part_qry = $this->db->query("select eb.lz_seller_acct_id,SDD.* from (SELECT LM.EXCEL_FILE_NAME, SD.WIZ_ERP_CODE, SD.SALES_RECORD_NUMBER, SD.USER_ID, SD.BUYER_FULLNAME, SD.BUYER_PHONE_NUMBER, SD.BUYER_EMAIL, SD.BUYER_ADDRESS1, SD.BUYER_ADDRESS2, SD.BUYER_CITY, SD.BUYER_STATE, SD.BUYER_ZIP, SD.BUYER_COUNTRY, SD.ORDER_ID, SD.LZ_SALELOAD_ID, SD.ITEM_ID, SD.TRANSACTION_ID, SD.ITEM_TITLE, SD.QUANTITY, SD.SALE_PRICE, SD.SHIPPING_AND_HANDLING, NVL(SP.PULLING_QTY, 0) PULLING_QTY, NVL(SP.CANCEL_QTY, 0) CANCEL_QTY, SD.SALES_TAX, SD.INSURANCE, SD.TOTAL_PRICE, SD.PAYMENT_METHOD, SD.PAYPAL_TRANSACTION_ID, TO_CHAR(SD.SALE_DATE, 'DD-MM-YYYY HH24:MI:SS') AS SALE_DATE, SD.CHECKOUT_DATE, SD.PAID_ON_DATE, SD.SHIPPED_ON_DATE, SD.SHIPPING_SERVICE, SD.FEEDBACK_LEFT, SD.FEEDBACK_RECEIVED, SD.NOTES_TO_YOURSELF, SD.CUSTOM_LABEL, SD.LISTED_ON, SD.SOLD_ON, SD.VARIATION_DETAILS, SD.EBAY_FEE_PERC, SD.PAYPAL_FEE_PERC, SD.PAYPAL_PER_TRANS_FEE FROM LZ_SALESLOAD_DET SD, LZ_SALESLOAD_MT LM, (SELECT SALES_RECORD_NO, SUM(NVL(PULLING_QTY, 0)) PULLING_QTY, SUM(NVL(CANCEL_QTY, 0)) CANCEL_QTY FROM LZ_SALES_PULLING GROUP BY SALES_RECORD_NO) SP WHERE SD.SALES_RECORD_NUMBER = SP.SALES_RECORD_NO(+) AND LM.LZ_SALELOAD_ID = SD.LZ_SALELOAD_ID ORDER BY SALES_RECORD_NUMBER) SDD,(select distinct e.ebay_item_id,e.lz_seller_acct_id from Ebay_List_Mt e) eb where NVL(SDD.QUANTITY, 0) <> (NVL(SDD.PULLING_QTY, 0) + NVL(SDD.CANCEL_QTY, 0)) and SDD.PULLING_QTY >0 and sdd.sale_date >= (sysdate - 7) AND SDD.ITEM_ID = eb.ebay_item_id and eb.lz_seller_acct_id is not null order by sdd.sale_date desc NULLS LAST");
			$part_qry = $this->db->query("SELECT EB.LZ_SELLER_ACCT_ID, SDD.* FROM (SELECT LM.EXCEL_FILE_NAME, SD.WIZ_ERP_CODE, SD.SALES_RECORD_NUMBER, SD.USER_ID, SD.BUYER_FULLNAME, SD.BUYER_PHONE_NUMBER, SD.BUYER_EMAIL, SD.BUYER_ADDRESS1, SD.BUYER_ADDRESS2, SD.BUYER_CITY, SD.BUYER_STATE, SD.BUYER_ZIP, SD.BUYER_COUNTRY, SD.ORDER_ID, SD.LZ_SALELOAD_ID, SD.ITEM_ID, SD.TRANSACTION_ID, SD.ITEM_TITLE, SD.QUANTITY, SD.SALE_PRICE, SD.SHIPPING_AND_HANDLING, NVL(SP.PULLING_QTY, 0) PULLING_QTY, NVL(SP.CANCEL_QTY, 0) CANCEL_QTY, SD.SALES_TAX, SD.INSURANCE, SD.TOTAL_PRICE, SD.PAYMENT_METHOD, SD.PAYPAL_TRANSACTION_ID, TO_CHAR(SD.SALE_DATE, 'MM/DD/YYYY HH24:MI:SS') AS SALE_DATE, SD.CHECKOUT_DATE, SD.PAID_ON_DATE, SD.SHIPPED_ON_DATE, SD.SHIPPING_SERVICE, SD.FEEDBACK_LEFT, SD.FEEDBACK_RECEIVED, SD.NOTES_TO_YOURSELF, SD.CUSTOM_LABEL, SD.LISTED_ON, SD.SOLD_ON, SD.VARIATION_DETAILS, SD.EBAY_FEE_PERC, SD.PAYPAL_FEE_PERC, SD.PAYPAL_PER_TRANS_FEE, B.BARCODE_NO, 'W'||WA.WAREHOUSE_NO||'-'||M.RACK_NO||'-R'||RO.ROW_NO||'-'||I.BIN_TYPE||'-'||I.BIN_NO BIN_NAME FROM LZ_SALESLOAD_DET SD, LZ_SALESLOAD_MT LM, LZ_BARCODE_MT B, BIN_MT I, LZ_RACK_ROWS RO, RACK_MT M, WAREHOUSE_MT WA, (SELECT SALES_RECORD_NO, SUM(NVL(PULLING_QTY, 0)) PULLING_QTY, SUM(NVL(CANCEL_QTY, 0)) CANCEL_QTY FROM LZ_SALES_PULLING GROUP BY SALES_RECORD_NO) SP WHERE SD.SALES_RECORD_NUMBER = SP.SALES_RECORD_NO(+) AND LM.LZ_SALELOAD_ID = SD.LZ_SALELOAD_ID AND SD.SALES_RECORD_NUMBER = B.SALE_RECORD_NO(+) AND I.CURRENT_RACK_ROW_ID = RO.RACK_ROW_ID(+) AND RO.RACK_ID = M.RACK_ID(+) AND M.WAREHOUSE_ID = WA.WAREHOUSE_ID(+) AND B.BIN_ID = I.BIN_ID(+) ORDER BY SALES_RECORD_NUMBER) SDD, (SELECT DISTINCT E.EBAY_ITEM_ID, E.LZ_SELLER_ACCT_ID FROM EBAY_LIST_MT E) EB WHERE NVL(SDD.QUANTITY, 0) < (NVL(SDD.PULLING_QTY, 0) + NVL(SDD.CANCEL_QTY, 0)) AND SDD.PULLING_QTY > 0 AND TO_DATE(SDD.SALE_DATE, 'MM/DD/YYYY HH24:MI:SS') >= (SYSDATE - 7) AND SDD.ITEM_ID = EB.EBAY_ITEM_ID AND EB.LZ_SELLER_ACCT_ID IS NOT NULL ORDER BY SDD.SALE_DATE DESC NULLS LAST "); 
			return $part_qry->result_array();
		}
		public function pulled(){

			//$pulled_qry = $this->db->query("SELECT EB.LZ_SELLER_ACCT_ID, SDD.* FROM (SELECT LM.EXCEL_FILE_NAME, SD.WIZ_ERP_CODE, SD.SALES_RECORD_NUMBER, SD.USER_ID, SD.BUYER_FULLNAME, SD.BUYER_PHONE_NUMBER, SD.BUYER_EMAIL, SD.BUYER_ADDRESS1, SD.BUYER_ADDRESS2, SD.BUYER_CITY, SD.BUYER_STATE, SD.BUYER_ZIP, SD.BUYER_COUNTRY, SD.ORDER_ID, SD.LZ_SALELOAD_ID, SD.ITEM_ID, SD.TRANSACTION_ID, SD.ITEM_TITLE, SD.QUANTITY, SD.SALE_PRICE, SD.SHIPPING_AND_HANDLING, NVL(SP.PULLING_QTY, 0) PULLING_QTY, NVL(SP.CANCEL_QTY, 0) CANCEL_QTY, SD.SALES_TAX, SD.INSURANCE, SD.TOTAL_PRICE, SD.PAYMENT_METHOD, SD.PAYPAL_TRANSACTION_ID, TO_CHAR(SD.SALE_DATE, 'DD-MM-YYYY HH24:MI:SS') AS SALE_DATE, SD.CHECKOUT_DATE, SD.PAID_ON_DATE, SD.SHIPPED_ON_DATE, SD.SHIPPING_SERVICE, SD.FEEDBACK_LEFT, SD.FEEDBACK_RECEIVED, SD.NOTES_TO_YOURSELF, SD.CUSTOM_LABEL, SD.LISTED_ON, SD.SOLD_ON, SD.VARIATION_DETAILS, SD.EBAY_FEE_PERC, SD.PAYPAL_FEE_PERC, SD.PAYPAL_PER_TRANS_FEE, B.BARCODE_NO, 'W' || WA.WAREHOUSE_NO || '-' || M.RACK_NO || '-R' || RO.ROW_NO || '-' || I.BIN_TYPE || '-' || I.BIN_NO BIN_NAME, SP.PULLER_NAME FROM LZ_SALESLOAD_DET SD, LZ_SALESLOAD_MT LM, LZ_BARCODE_MT B, BIN_MT I, LZ_RACK_ROWS RO, RACK_MT M, WAREHOUSE_MT WA, (SELECT SALES_RECORD_NO,MAX(PULLER_NAME) PULLER_NAME, SUM(NVL(PULLING_QTY, 0)) PULLING_QTY, SUM(NVL(CANCEL_QTY, 0)) CANCEL_QTY FROM LZ_SALES_PULLING GROUP BY SALES_RECORD_NO) SP WHERE SD.SALES_RECORD_NUMBER = SP.SALES_RECORD_NO(+) AND LM.LZ_SALELOAD_ID = SD.LZ_SALELOAD_ID AND SD.SALES_RECORD_NUMBER = B.SALE_RECORD_NO(+) AND I.CURRENT_RACK_ROW_ID = RO.RACK_ROW_ID(+) AND RO.RACK_ID = M.RACK_ID(+) AND M.WAREHOUSE_ID = WA.WAREHOUSE_ID(+) AND B.BIN_ID = I.BIN_ID(+) ORDER BY SALES_RECORD_NUMBER) SDD, (SELECT DISTINCT E.EBAY_ITEM_ID, E.LZ_SELLER_ACCT_ID FROM EBAY_LIST_MT E) EB WHERE NVL(SDD.QUANTITY, 0) = (NVL(SDD.PULLING_QTY, 0) + NVL(SDD.CANCEL_QTY, 0)) AND SDD.PULLING_QTY > 0 AND SDD.SALE_DATE >= (SYSDATE - 7) AND SDD.ITEM_ID = EB.EBAY_ITEM_ID AND EB.LZ_SELLER_ACCT_ID IS NOT NULL ORDER BY SDD.SALE_DATE DESC NULLS LAST "); 
			$pulled_qry = $this->db->query("SELECT EB.LZ_SELLER_ACCT_ID, SDD.* FROM (SELECT LM.EXCEL_FILE_NAME, SD.WIZ_ERP_CODE, SD.SALES_RECORD_NUMBER, SD.USER_ID, SD.BUYER_FULLNAME, SD.BUYER_PHONE_NUMBER, SD.BUYER_EMAIL, SD.BUYER_ADDRESS1, SD.BUYER_ADDRESS2, SD.BUYER_CITY, SD.BUYER_STATE, SD.BUYER_ZIP, SD.BUYER_COUNTRY, SD.ORDER_ID, SD.LZ_SALELOAD_ID, SD.ITEM_ID, SD.TRANSACTION_ID, SD.ITEM_TITLE, SD.QUANTITY, SD.SALE_PRICE, SD.SHIPPING_AND_HANDLING, NVL(SP.PULLING_QTY, 0) PULLING_QTY, NVL(SP.CANCEL_QTY, 0) CANCEL_QTY, SD.SALES_TAX, SD.INSURANCE, SD.TOTAL_PRICE, SD.PAYMENT_METHOD, SD.PAYPAL_TRANSACTION_ID, TO_CHAR(SD.SALE_DATE, 'MM/DD/YYYY HH24:MI:SS') AS SALE_DATE, SD.CHECKOUT_DATE, SD.PAID_ON_DATE, SD.SHIPPED_ON_DATE, SD.SHIPPING_SERVICE, SD.FEEDBACK_LEFT, SD.FEEDBACK_RECEIVED, SD.NOTES_TO_YOURSELF, SD.CUSTOM_LABEL, SD.LISTED_ON, SD.SOLD_ON, SD.VARIATION_DETAILS, SD.EBAY_FEE_PERC, SD.PAYPAL_FEE_PERC, SD.PAYPAL_PER_TRANS_FEE, B.BARCODE_NO, 'W' || WA.WAREHOUSE_NO || '-' || M.RACK_NO || '-R' || RO.ROW_NO || '-' || I.BIN_TYPE || '-' || I.BIN_NO BIN_NAME, SP.PULLER_NAME, SP.PULLING_DATE FROM LZ_SALESLOAD_DET SD, LZ_SALESLOAD_MT LM, LZ_BARCODE_MT B, BIN_MT I, LZ_RACK_ROWS RO, RACK_MT M, WAREHOUSE_MT WA, (SELECT SALES_RECORD_NO,MAX(PULLER_NAME) PULLER_NAME,TO_CHAR(MAX(PULLING_DATE), 'YYYY-MM-DD HH24:MI:SS') PULLING_DATE, SUM(NVL(PULLING_QTY, 0)) PULLING_QTY, SUM(NVL(CANCEL_QTY, 0)) CANCEL_QTY FROM LZ_SALES_PULLING GROUP BY SALES_RECORD_NO) SP WHERE SD.SALES_RECORD_NUMBER = SP.SALES_RECORD_NO(+) AND LM.LZ_SALELOAD_ID = SD.LZ_SALELOAD_ID AND SD.SALES_RECORD_NUMBER = B.SALE_RECORD_NO(+) AND I.CURRENT_RACK_ROW_ID = RO.RACK_ROW_ID(+) AND RO.RACK_ID = M.RACK_ID(+) AND M.WAREHOUSE_ID = WA.WAREHOUSE_ID(+) AND B.BIN_ID = I.BIN_ID(+) ORDER BY SALES_RECORD_NUMBER) SDD, (SELECT DISTINCT E.EBAY_ITEM_ID, E.LZ_SELLER_ACCT_ID FROM EBAY_LIST_MT E) EB WHERE NVL(SDD.QUANTITY, 0) = (NVL(SDD.PULLING_QTY, 0) + NVL(SDD.CANCEL_QTY, 0)) AND SDD.PULLING_QTY > 0 AND TO_DATE(SDD.SALE_DATE, 'MM/DD/YYYY HH24:MI:SS') >= (SYSDATE - 7) AND SDD.ITEM_ID = EB.EBAY_ITEM_ID AND EB.LZ_SELLER_ACCT_ID IS NOT NULL ORDER BY SDD.SALE_DATE DESC NULLS LAST ");
			return $pulled_qry->result_array();
		}
		public function order_summary(){
			$total_dfw = $this->db->query("SELECT COUNT(ACC_QRY.LZ_SELLER_ACCT_ID) TOTAL_DFW FROM (SELECT EB.LZ_SELLER_ACCT_ID, SDD.* FROM (SELECT SD.ITEM_ID, SD.QUANTITY, NVL(SP.PULLING_QTY, 0) PULLING_QTY, NVL(SP.CANCEL_QTY, 0) CANCEL_QTY FROM LZ_SALESLOAD_DET SD, LZ_SALESLOAD_MT LM, (SELECT SALES_RECORD_NO, SUM(NVL(PULLING_QTY, 0)) PULLING_QTY, SUM(NVL(CANCEL_QTY, 0)) CANCEL_QTY FROM LZ_SALES_PULLING GROUP BY SALES_RECORD_NO) SP WHERE SD.SALES_RECORD_NUMBER = SP.SALES_RECORD_NO(+) AND LM.LZ_SALELOAD_ID = SD.LZ_SALELOAD_ID AND SD.GNRTD_DC_ID IS NULL ORDER BY SALES_RECORD_NUMBER) SDD, (SELECT DISTINCT E.EBAY_ITEM_ID, E.LZ_SELLER_ACCT_ID FROM EBAY_LIST_MT E) EB WHERE NVL(SDD.QUANTITY, 0) <> (NVL(SDD.PULLING_QTY, 0) + NVL(SDD.CANCEL_QTY, 0)) AND SDD.ITEM_ID = EB.EBAY_ITEM_ID AND EB.LZ_SELLER_ACCT_ID = 2 ) ACC_QRY"); 
			$total_dfw = $total_dfw->result_array();
			$total_tech = $this->db->query("SELECT COUNT(ACC_QRY.LZ_SELLER_ACCT_ID) TOTAL_TECH FROM (SELECT EB.LZ_SELLER_ACCT_ID, SDD.* FROM (SELECT SD.ITEM_ID, SD.QUANTITY, NVL(SP.PULLING_QTY, 0) PULLING_QTY, NVL(SP.CANCEL_QTY, 0) CANCEL_QTY FROM LZ_SALESLOAD_DET SD, LZ_SALESLOAD_MT LM, (SELECT SALES_RECORD_NO, SUM(NVL(PULLING_QTY, 0)) PULLING_QTY, SUM(NVL(CANCEL_QTY, 0)) CANCEL_QTY FROM LZ_SALES_PULLING GROUP BY SALES_RECORD_NO) SP WHERE SD.SALES_RECORD_NUMBER = SP.SALES_RECORD_NO(+) AND LM.LZ_SALELOAD_ID = SD.LZ_SALELOAD_ID AND SD.GNRTD_DC_ID IS NULL ORDER BY SALES_RECORD_NUMBER) SDD, (SELECT DISTINCT E.EBAY_ITEM_ID, E.LZ_SELLER_ACCT_ID FROM EBAY_LIST_MT E) EB WHERE NVL(SDD.QUANTITY, 0) <> (NVL(SDD.PULLING_QTY, 0) + NVL(SDD.CANCEL_QTY, 0)) AND SDD.ITEM_ID = EB.EBAY_ITEM_ID AND EB.LZ_SELLER_ACCT_ID = 1 ) ACC_QRY"); 
			$total_tech = $total_tech->result_array();
			return array('total_dfw'=>$total_dfw,'total_tech'=>$total_tech);
		}
		public function pulled_summary(){
			$total_dfw = $this->db->query("SELECT COUNT(1) TOTAL_DFW FROM (SELECT EB.LZ_SELLER_ACCT_ID, SDD.* FROM (SELECT SD.ITEM_ID, SD.QUANTITY, NVL(SP.PULLING_QTY, 0) PULLING_QTY, NVL(SP.CANCEL_QTY, 0) CANCEL_QTY,TO_CHAR(SD.SALE_DATE, 'MM/DD/YYYY HH24:MI:SS') AS SALE_DATE FROM LZ_SALESLOAD_DET SD, LZ_SALESLOAD_MT LM, LZ_BARCODE_MT B, BIN_MT I, LZ_RACK_ROWS RO, RACK_MT M, WAREHOUSE_MT WA, (SELECT SALES_RECORD_NO, MAX(PULLER_NAME) PULLER_NAME, TO_CHAR(MAX(PULLING_DATE), 'YYYY-MM-DD HH24:MI:SS') PULLING_DATE, SUM(NVL(PULLING_QTY, 0)) PULLING_QTY, SUM(NVL(CANCEL_QTY, 0)) CANCEL_QTY FROM LZ_SALES_PULLING GROUP BY SALES_RECORD_NO) SP WHERE SD.SALES_RECORD_NUMBER = SP.SALES_RECORD_NO(+) AND LM.LZ_SALELOAD_ID = SD.LZ_SALELOAD_ID AND SD.SALES_RECORD_NUMBER = B.SALE_RECORD_NO(+) AND I.CURRENT_RACK_ROW_ID = RO.RACK_ROW_ID(+) AND RO.RACK_ID = M.RACK_ID(+) AND M.WAREHOUSE_ID = WA.WAREHOUSE_ID(+) AND B.BIN_ID = I.BIN_ID(+) ORDER BY SALES_RECORD_NUMBER) SDD, (SELECT DISTINCT E.EBAY_ITEM_ID, E.LZ_SELLER_ACCT_ID FROM EBAY_LIST_MT E) EB WHERE NVL(SDD.QUANTITY, 0) = (NVL(SDD.PULLING_QTY, 0) + NVL(SDD.CANCEL_QTY, 0)) AND SDD.PULLING_QTY > 0 AND TO_DATE(SDD.SALE_DATE, 'MM/DD/YYYY HH24:MI:SS') >= (SYSDATE - 7) AND SDD.ITEM_ID = EB.EBAY_ITEM_ID AND EB.LZ_SELLER_ACCT_ID = 2)"); 
			$total_dfw = $total_dfw->result_array();
			$total_tech = $this->db->query("SELECT COUNT(1) TOTAL_TECH FROM (SELECT EB.LZ_SELLER_ACCT_ID, SDD.* FROM (SELECT SD.ITEM_ID, SD.QUANTITY, NVL(SP.PULLING_QTY, 0) PULLING_QTY, NVL(SP.CANCEL_QTY, 0) CANCEL_QTY,TO_CHAR(SD.SALE_DATE, 'MM/DD/YYYY HH24:MI:SS') AS SALE_DATE FROM LZ_SALESLOAD_DET SD, LZ_SALESLOAD_MT LM, LZ_BARCODE_MT B, BIN_MT I, LZ_RACK_ROWS RO, RACK_MT M, WAREHOUSE_MT WA, (SELECT SALES_RECORD_NO, MAX(PULLER_NAME) PULLER_NAME, TO_CHAR(MAX(PULLING_DATE), 'YYYY-MM-DD HH24:MI:SS') PULLING_DATE, SUM(NVL(PULLING_QTY, 0)) PULLING_QTY, SUM(NVL(CANCEL_QTY, 0)) CANCEL_QTY FROM LZ_SALES_PULLING GROUP BY SALES_RECORD_NO) SP WHERE SD.SALES_RECORD_NUMBER = SP.SALES_RECORD_NO(+) AND LM.LZ_SALELOAD_ID = SD.LZ_SALELOAD_ID AND SD.SALES_RECORD_NUMBER = B.SALE_RECORD_NO(+) AND I.CURRENT_RACK_ROW_ID = RO.RACK_ROW_ID(+) AND RO.RACK_ID = M.RACK_ID(+) AND M.WAREHOUSE_ID = WA.WAREHOUSE_ID(+) AND B.BIN_ID = I.BIN_ID(+) ORDER BY SALES_RECORD_NUMBER) SDD, (SELECT DISTINCT E.EBAY_ITEM_ID, E.LZ_SELLER_ACCT_ID FROM EBAY_LIST_MT E) EB WHERE NVL(SDD.QUANTITY, 0) = (NVL(SDD.PULLING_QTY, 0) + NVL(SDD.CANCEL_QTY, 0)) AND SDD.PULLING_QTY > 0 AND TO_DATE(SDD.SALE_DATE, 'MM/DD/YYYY HH24:MI:SS') >= (SYSDATE - 7) AND SDD.ITEM_ID = EB.EBAY_ITEM_ID AND EB.LZ_SELLER_ACCT_ID = 1)"); 
			$total_tech = $total_tech->result_array();
			return array('total_dfw'=>$total_dfw,'total_tech'=>$total_tech);
		}
		public function partial_summary(){
			$total_dfw = $this->db->query("SELECT COUNT(1) TOTAL_DFW FROM (SELECT EB.LZ_SELLER_ACCT_ID, SDD.* FROM (SELECT SD.ITEM_ID, SD.QUANTITY, NVL(SP.PULLING_QTY, 0) PULLING_QTY, NVL(SP.CANCEL_QTY, 0) CANCEL_QTY, TO_CHAR(SD.SALE_DATE, 'MM/DD/YYYY HH24:MI:SS') AS SALE_DATE FROM LZ_SALESLOAD_DET SD, LZ_SALESLOAD_MT LM, LZ_BARCODE_MT B, BIN_MT I, LZ_RACK_ROWS RO, RACK_MT M, WAREHOUSE_MT WA, (SELECT SALES_RECORD_NO, SUM(NVL(PULLING_QTY, 0)) PULLING_QTY, SUM(NVL(CANCEL_QTY, 0)) CANCEL_QTY FROM LZ_SALES_PULLING GROUP BY SALES_RECORD_NO) SP WHERE SD.SALES_RECORD_NUMBER = SP.SALES_RECORD_NO(+) AND LM.LZ_SALELOAD_ID = SD.LZ_SALELOAD_ID AND SD.SALES_RECORD_NUMBER = B.SALE_RECORD_NO(+) AND I.CURRENT_RACK_ROW_ID = RO.RACK_ROW_ID(+) AND RO.RACK_ID = M.RACK_ID(+) AND M.WAREHOUSE_ID = WA.WAREHOUSE_ID(+) AND B.BIN_ID = I.BIN_ID(+) ORDER BY SALES_RECORD_NUMBER) SDD, (SELECT DISTINCT E.EBAY_ITEM_ID, E.LZ_SELLER_ACCT_ID FROM EBAY_LIST_MT E) EB WHERE NVL(SDD.QUANTITY, 0) <> (NVL(SDD.PULLING_QTY, 0) + NVL(SDD.CANCEL_QTY, 0)) AND SDD.PULLING_QTY > 0 AND TO_DATE(SDD.SALE_DATE, 'MM/DD/YYYY HH24:MI:SS') >= (SYSDATE - 7) AND SDD.ITEM_ID = EB.EBAY_ITEM_ID AND EB.LZ_SELLER_ACCT_ID = 2) ");
			$total_dfw = $total_dfw->result_array();
			$total_tech = $this->db->query("SELECT COUNT(1) TOTAL_TECH FROM (SELECT EB.LZ_SELLER_ACCT_ID, SDD.* FROM (SELECT SD.ITEM_ID, SD.QUANTITY, NVL(SP.PULLING_QTY, 0) PULLING_QTY, NVL(SP.CANCEL_QTY, 0) CANCEL_QTY, TO_CHAR(SD.SALE_DATE, 'MM/DD/YYYY HH24:MI:SS') AS SALE_DATE FROM LZ_SALESLOAD_DET SD, LZ_SALESLOAD_MT LM, LZ_BARCODE_MT B, BIN_MT I, LZ_RACK_ROWS RO, RACK_MT M, WAREHOUSE_MT WA, (SELECT SALES_RECORD_NO, SUM(NVL(PULLING_QTY, 0)) PULLING_QTY, SUM(NVL(CANCEL_QTY, 0)) CANCEL_QTY FROM LZ_SALES_PULLING GROUP BY SALES_RECORD_NO) SP WHERE SD.SALES_RECORD_NUMBER = SP.SALES_RECORD_NO(+) AND LM.LZ_SALELOAD_ID = SD.LZ_SALELOAD_ID AND SD.SALES_RECORD_NUMBER = B.SALE_RECORD_NO(+) AND I.CURRENT_RACK_ROW_ID = RO.RACK_ROW_ID(+) AND RO.RACK_ID = M.RACK_ID(+) AND M.WAREHOUSE_ID = WA.WAREHOUSE_ID(+) AND B.BIN_ID = I.BIN_ID(+) ORDER BY SALES_RECORD_NUMBER) SDD, (SELECT DISTINCT E.EBAY_ITEM_ID, E.LZ_SELLER_ACCT_ID FROM EBAY_LIST_MT E) EB WHERE NVL(SDD.QUANTITY, 0) <> (NVL(SDD.PULLING_QTY, 0) + NVL(SDD.CANCEL_QTY, 0)) AND SDD.PULLING_QTY > 0 AND TO_DATE(SDD.SALE_DATE, 'MM/DD/YYYY HH24:MI:SS') >= (SYSDATE - 7) AND SDD.ITEM_ID = EB.EBAY_ITEM_ID AND EB.LZ_SELLER_ACCT_ID = 1)"); 
			$total_tech = $total_tech->result_array();
			return array('total_dfw'=>$total_dfw,'total_tech'=>$total_tech);
		}		
		public function get_data($pull_barcode){
			/*==========================================================
			=            check if ebay id or barcode scaned            =
			==========================================================*/
			$str = strlen($pull_barcode);//if length = 12 its ebay id
			if($str== 12){
				$ebay_id = $pull_barcode;
				$scanned_barcode[]= '';
			}else{
				// ========= Start get ebay id against barcode ===========
		      $ebay_id_qry = $this->db->query("SELECT B.EBAY_ITEM_ID  FROM LZ_BARCODE_MT B WHERE  B.BARCODE_NO = $pull_barcode");

				$ebay_id_qry = $ebay_id_qry->result_array();
				$ebay_id = @$ebay_id_qry[0]['EBAY_ITEM_ID'];
				$scanned_barcode[]= $pull_barcode;
		      // ============== End get ebay id against barcode ===========
			  /* ============== Bin Location query against barcode start ===========*/
		    	$bin_location_qry = $this->db->query("SELECT 'W'||W.WAREHOUSE_NO||'-'||R.RACK_NO||'-R'||RR.ROW_NO||'-'||B.BIN_TYPE||'-'||B.BIN_NO BIN_LOCATION FROM BIN_MT B, RACK_MT R, WAREHOUSE_MT W, LZ_RACK_ROWS RR, LZ_BARCODE_MT BB WHERE B.BIN_ID = BB.BIN_ID AND B.CURRENT_RACK_ROW_ID = RR.RACK_ROW_ID AND R.RACK_ID = RR.RACK_ID AND R.WAREHOUSE_ID = W.WAREHOUSE_ID and bb.barcode_no = $pull_barcode"); 
		    	$bin_location_qry = $bin_location_qry->result_array();
				/* ============== Bin Location query against barcode end ===========*/
			}
			
			/*=====  End of check if ebay id or barcode scaned  ======*/


			if(!empty($ebay_id)){
				
			  /* ============== Bin Location query against barcode start ===========*/
				$barcode_no_qry = $this->db->query("SELECT BARCODE_NO, SALE_RECORD_NO FROM LZ_BARCODE_MT B WHERE B.BARCODE_NO = (SELECT MIN(B.BARCODE_NO) BARCODE_NO FROM LZ_BARCODE_MT B WHERE B.EBAY_ITEM_ID = $ebay_id AND B.PULLING_ID IS NULL AND B.SALE_RECORD_NO IS NOT NULL AND B.ITEM_ADJ_DET_ID_FOR_OUT IS NULL AND B.LZ_PART_ISSUE_MT_ID IS NULL AND B.LZ_POS_MT_ID IS NULL AND B.PULLING_ID IS NULL )");
				if($barcode_no_qry->num_rows() > 0){
					$barcode_no_qry = $barcode_no_qry->result_array();
					$pull_barcode = $barcode_no_qry[0]['BARCODE_NO'];
					$scanned_barcode= '';
					$scanned_barcode[]= $pull_barcode;
					$srno = $barcode_no_qry[0]['SALE_RECORD_NO'];
					$bin_location_qry = $this->db->query("SELECT 'W'||W.WAREHOUSE_NO||'-'||R.RACK_NO||'-R'||RR.ROW_NO||'-'||B.BIN_TYPE||'-'||B.BIN_NO BIN_LOCATION FROM BIN_MT B, RACK_MT R, WAREHOUSE_MT W, LZ_RACK_ROWS RR, LZ_BARCODE_MT BB WHERE B.BIN_ID = BB.BIN_ID AND B.CURRENT_RACK_ROW_ID = RR.RACK_ROW_ID AND R.RACK_ID = RR.RACK_ID AND R.WAREHOUSE_ID = W.WAREHOUSE_ID and bb.barcode_no = $pull_barcode "); 
		    		$bin_location_qry = $bin_location_qry->result_array();

		    		// ==================== Start get already pull and cancle qty =============================
			      $already_qry = $this->db->query("SELECT SUM(NVL(P.PULLING_QTY, 0)) ALREADY_PULL_QTY, SUM(NVL(P.CANCEL_QTY, 0)) ALREADY_CANCEL_QTY FROM LZ_SALES_PULLING P WHERE P.SALES_RECORD_NO = '$srno'");
			      $already_qry = $already_qry->result_array();
			       
			      // ======================= End get already pull and cancle qty =============================

			      // ==================== Start get item wieght qry =============================
			      $weight_qry = $this->db->query("SELECT COUNT(WEIGHT) WEIGHT FROM LZ_SALES_PULLING P WHERE P.EBAY_ITEM_ID ='$ebay_id'"); 
			      $weight_qry = $weight_qry->result_array();
			      $weight = $weight_qry[0]['WEIGHT'];
			      if($weight >0){
			      $weight_qry = $this->db->query("SELECT DISTINCT WEIGHT FROM LZ_SALES_PULLING WHERE EBAY_ITEM_ID = '$ebay_id' AND WEIGHT IS NOT NULL"); 
			      $weight_qry = $weight_qry->result_array();

			      }

			      // ======================= End get item wieght qry =============================
			      // ==================== Start get already pull and cancle qty =============================
			       
			      $sale_data = $this->db->query("SELECT ITEM_ID EBAY_ITEM_ID,SALES_RECORD_NUMBER,QUANTITY,ITEM_TITLE,TO_CHAR(SALE_DATE, 'MM/DD/YYYY') SALE_DATE  FROM LZ_SALESLOAD_DET WHERE SALES_RECORD_NUMBER = '$srno'");
			      $sale_data = $sale_data->result_array();
			       
			      // ======================= End get already pull and cancle qty ============================

			      if($weight >0){
			      	return array('already_qry'=>$already_qry,'sale_data'=>$sale_data,'weight_qry'=>$weight_qry,'scanned_barcode'=>$scanned_barcode,'bin_location_qry'=>$bin_location_qry);
			      }else{
			      	return array('already_qry'=>$already_qry,'sale_data'=>$sale_data,'weight_qry'=>NULL,'scanned_barcode'=>$scanned_barcode,'bin_location_qry'=>$bin_location_qry);
			      }
				}else{
					return 'Not_Found';
				} 

	       }else{
	       		return "Not_Listed";
	       		//echo "<script>alert('Item is not listed.');</script>";
	       		
	       }
		}
		public function pull_cancel(){

			$pull_barcode = $this->input->post('pull_barcode');
			$scanned_barcode = $this->input->post('scanned_barcode');
			$str = strlen($pull_barcode);//if length = 12 its ebay id
			if($str== 12){
				$pull_barcode = $scanned_barcode;
			}
			$ebay_id = $this->input->post('ebay_id');
			$puller_name = $this->input->post('puller_name');
			$weight = $this->input->post('weight');
			$order_no = $this->input->post('order_no');
			$action = $this->input->post('action');			
			$puller_bin = $this->input->post('puller_bin');	
			$pulled_by = $this->session->userdata('user_id');		
						

			$query = $this->db->query("SELECT get_single_primary_key('LZ_SALES_PULLING','PULLING_ID') PULLING_ID FROM DUAL");
	        $rs = $query->result_array();
	        $pulling_id = $rs[0]['PULLING_ID'];
	        // $pulling_date = date("m/d/Y");
	        // $pulling_date= "TO_DATE('".$pulling_date."', 'MM/DD/YYYY')";

	        date_default_timezone_set("America/Chicago");
			$pulling_date = date("Y-m-d H:i:s");
            $pulling_date= "TO_DATE('".$pulling_date."', 'YYYY-MM-DD HH24:MI:SS')";
            $user_id = $this->session->userdata('user_id');

	        $pulling_no = 1;
	        $ebay_item_id = $ebay_id;
	        $sales_record_no = $order_no;
	        
	        $puller_name = $puller_name;
	        if($action == 'pull'){
	        	$pulling_qty = 1;
	        	$trans_status = "P";
	        	$cancel_qty="NULL";
	        }else{
	        	$pulling_qty = "NULL";
	        	$trans_status = "C";
	        	$cancel_qty=1;
	        }
	        
	        if(!empty($weight))
	        {
	        	$weight = $weight;	
	        }else{
	        	$weight = "NULL";
	        }
	        $unit = "NULL";
	        
	        $comma = ',';

    	$qry_pull = "INSERT INTO LZ_SALES_PULLING VALUES($pulling_id $comma $pulling_date $comma $pulling_no $comma '$ebay_item_id' $comma '$sales_record_no' $comma $pulling_qty $comma '$puller_name' $comma '$trans_status' $comma $cancel_qty $comma $weight $comma $unit $comma $pulled_by)";
    	//var_dump($qry_pull);exit;
    	$this->db->query($qry_pull);
    	$qry_pull = "SELECT PULLING_QTY,TO_CHAR(PULLING_DATE, 'MM/DD/YYYY HH24:MI:SS') PULLING_DATE, CANCEL_QTY FROM LZ_SALES_PULLING P WHERE P.PULLING_ID=(SELECT MAX(PULLING_ID) FROM LZ_SALES_PULLING)";
    	//var_dump($qry_pull);exit;
    	$qry_pull = $this->db->query($qry_pull);
    	

			if($action == 'pull'){
				$this->db->query("CALL PRO_SIGNLE_ORDER_POST('$sales_record_no')");

				/*===========================================================
				=            check if puller bin is given or not            =
				===========================================================*/
				if(!empty($puller_bin)){
					/*==== Bin Assignment to item barcode start ====*/
	    			// fetch current bin id
					$result = $bin_id_qry->result_array();
					$old_loc_id = @$result[0]['BIN_ID'];
					// for New entered Bin
					$bin_id_qry = $this->db->query("SELECT BIN_ID, BIN_NAME FROM (SELECT B.BIN_ID, B.BIN_TYPE  || '-' || B.BIN_NO BIN_NAME FROM BIN_MT B) WHERE BIN_NAME = '$puller_bin'");

					$result = $bin_id_qry->result_array();
					$new_bin_id = @$result[0]['BIN_ID'];
					if(empty($new_bin_id)){
						$new_bin_id = "";
					}

					if(!(empty($new_bin_id))){
						$qr = $this->db->query("UPDATE LZ_BARCODE_MT SET BIN_ID = $new_bin_id, PULLING_ID = $pulling_id,SALE_RECORD_NO='$sales_record_no' WHERE BARCODE_NO = '$pull_barcode' ");

						if($qr){

					        $log_id_qry = $this->db->query("SELECT GET_SINGLE_PRIMARY_KEY('LZ_LOC_TRANS_LOG','LOC_TRANS_ID') ID FROM DUAL"); 
					        $rs = $log_id_qry->result_array();
					        $loc_trans_id = @$rs[0]['ID'];							

							$this->db->query("INSERT INTO LZ_LOC_TRANS_LOG (LOC_TRANS_ID, TRANS_DATE_TIME, BARCODE_NO, TRANS_BY_ID, NEW_LOC_ID, OLD_LOC_ID, REMARKS, OLD_ROW_ID, NEW_ROW_ID) VALUES($loc_trans_id, $pulling_date, '$pull_barcode', $user_id, '$new_bin_id', '$old_loc_id', null,null,null)"); 
						}					

					}


			/*==== Bin Assignment to item barcode end ====*/
				}else{
					$this->db->query("UPDATE LZ_BARCODE_MT SET PULLING_ID = $pulling_id,SALE_RECORD_NO='$sales_record_no' WHERE BARCODE_NO = '$pull_barcode'");
				}//puller bin if else end
				
				
				/*=====  End of check if puller bin is given or not  ======*/
				
					
	        }else{
	        	$this->db->query("UPDATE LZ_BARCODE_MT SET SALE_RECORD_NO='' WHERE BARCODE_NO = '$pull_barcode' ");

	        }// END ACTION IF ELSE


    	return $qry_pull->result_array();

		}
		public function save_print($order_no,$unit,$weight){

			$query = $this->db->query("UPDATE LZ_SALES_PULLING SET WEIGHT = $weight, UOM_ID = $unit WHERE  SALES_RECORD_NO = '$order_no'");
			//$this->db->query($qry_pull);


			//$query = $this->db->query("SELECT SALES_RECORD_NO, T.WEIGHT,SUBSTR(T.EBAY_ITEM_ID,6,7) EBAY_ID,T.PULLING_DATE,T.UOM_ID,SUM(T.PULLING_QTY) FROM LZ_SALES_PULLING T WHERE T.PULLING_DATE=(SELECT MAX(LSP.PULLING_DATE) FROM LZ_SALES_PULLING LSP WHERE LSP.SALES_RECORD_NO= $order_no) AND T.SALES_RECORD_NO = $order_no");
			$query = $this->db->query("SELECT TO_CHAR(T.PULLING_DATE, 'YYYY-MM-DD HH24:MI:SS') PULLING_DATE,T.SALES_RECORD_NO, T.WEIGHT, SUBSTR(T.EBAY_ITEM_ID, 6, 7) EBAY_ID, T.UOM_ID, qry.PULLING_QTY, qry.Cancel_Qty FROM LZ_SALES_PULLING T, (select sum(PULLING_QTY) PULLING_QTY, sum(Cancel_Qty) Cancel_Qty from LZ_SALES_PULLING WHERE SALES_RECORD_NO = '$order_no') qry WHERE T.PULLING_DATE = (SELECT MAX(LSP.PULLING_DATE) FROM LZ_SALES_PULLING LSP WHERE LSP.SALES_RECORD_NO = '$order_no') AND T.SALES_RECORD_NO = '$order_no'");
			 return $query->result_array();

		}


		

}

 ?>