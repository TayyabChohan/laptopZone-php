<?php 
ini_set('memory_limit', '-1');
	// Test
	/**
	* m_reports Model
	*/
	class m_ledger_report extends CI_Model
	{

		public function __construct(){
		parent::__construct();
		$this->load->database();
		
		
	}
	public function make_report(){
			$inventory_org			=	$this->input->post("inventory_org");
			$sub_inventory			=	$this->input->post("sub_inventory");
			$locator				=	$this->input->post("locator");
			$locator_desc			=	$this->input->post("locator_desc");
			$item_type				=	$this->input->post("item_type");
			$item_code_from			=	$this->input->post("item_code_from");
			$item_code_to			=	$this->input->post("item_code_to");
			$exclude				=	$this->input->post("exclude");
			$quantitaive			=	$this->input->post("quantitaive");
			$primary_qty			=	$this->input->post("primary_qty");
			$date_from_to			=	$this->input->post("date_from_to");
				$rs 					= explode('-', $date_from_to);
		    	$fromdate 				= $rs[0];
		        $todate 				= $rs[1];
			    /*===Convert Date in 24-Apr-2016===*/
			    $fromdate 				= date_create($rs[0]);
			    $todate 				= date_create($rs[1]);
			    $from 					= date_format($fromdate,'d-M-y');
			    $previous_date = date('d-M-y', strtotime($from.'-1 day'));
			    //$previous_date = date_format($from, 'd-m-y');;
			    $to 					= date_format($todate, 'd-M-y');
			    
			    //var_dump($from); exit;
			    //////////////////FOR GETTING LAST YEAR ID/////////////////////////
			    $set_of_book_ids = $this->db->query("SELECT SET_OF_BOOK_ID FROM WIZ_GL_SET_OF_BOOKS")->result_array(); 
			    $set_of_book_id= $set_of_book_ids[0]['SET_OF_BOOK_ID'];

			    $year_id_query = $this->db->query("SELECT PCKG_ACCOUNT_INQUIRY.GET_LAST_YEARS_ID(1, '$from') LAST_YEAR_ID FROM DUAL")->result_array();
	   			$last_year_id= $year_id_query[0]['LAST_YEAR_ID'];
	   			//////////////////FOR GETTING CURRENT YEAR FIRST ID/////////////////////////
	   			$final_year_ids = $this->db->query("SELECT PCKG_ACCOUNT_INQUIRY.GET_THIS_YEARS_FIRST_DATE(1, '$from') FINAL_YEAR_FIRST_DATE FROM DUAL")->result_array();
	   			$this_year_date= $final_year_ids[0]['FINAL_YEAR_FIRST_DATE'];
	   			$session_array = array(
						        'item_code_from'  		=> $item_code_from,
						        'item_code_to'     		=> $item_code_to,
						        'from'     				=> $from,
						        'to'     				=> $to,
						        'previous_date'     	=> $previous_date,
						        'last_year_id'     		=> $last_year_id,
						        'this_year_date'     	=> $this_year_date,
						);
			    $this->session->set_userdata($session_array);
	   			//////////////////////////////////////////////////////////////////
			    $query=$this->db->query("SELECT VCC.CODE_VALUE, VCC.CODE_DESC, nvl(OPENING.AMOUNT, 0) OPEN_AMOUNT, nvl(OPENING.QTY, 0) OPEN_QTY, TRANS.INOUT, TRANS.TYPE, TRANS.MASTER_ID, TRANS.DOC_NUMBER, TRANS.REF_NO, TRANS.DOC_DATE, TRANS.QTY, TRANS.AMOUNT, decode(NVL(TRANS.QTY, 0), 0, 0, TRANS.AMOUNT / TRANS.QTY) RATE, TRANS.INV_TRANSACTION_NO, TRANS.ITEM_ID, ITEMS_MT.ITEM_CODE, ITEMS_MT.ITEM_DESC, TRANS.DESCRIPTION, pri_uom.uom_tiny_desc, INV_VAL.INV_VAL_DESC, TRANS.SUB_INV_DESC, FLAG FROM CODE_COMBINATION_VALUES VCC, ITEMS_MT, WIZ_UOM_MT PRI_UOM, wiz_inv_val_method_mt inv_val, WIZ_ITEM_TYPE_MT ITEM_TYPE, (SELECT SUB_INV.qty_decimal_places, SUB_INV.SUB_INV_DESC, IBMT.SHORT_DESC TYPE, 1 INOUT, MT.GRN_NO DOC_NUMBER, mt.grn_ref_no REF_NO, DET.ITEM_ID, MT.GRN_ID MASTER_ID, MT.GRN_DATE DOC_DATE, DET.GRN_DET_ID, DET.PRIMARY_ACCEPTED_QTY QTY, NVL(DET.GRN_LINE_AMOUNT, POD.TC_AMOUNT) AMOUNT, MT.INV_TRANSACTION_NO, SMT.COMPANY_NAME DESCRIPTION, 0 FLAG FROM GRN_MT MT, GRN_DETAIL          DET, PURCHASE_ORDER_DET  POD, SUPPLIER_MT         SMT, INV_BOOKS_MT        IBMT, ITEMS_MT, WIZ_ITEM_TYPE_MT    ITEM_TYPE, SUB_INVENTORY_MT    SUB_INV, INV_ORGANIZATION_MT IOMT WHERE MT.GRN_ID = DET.GRN_ID AND MT.SUPPLIER_ID = SMT.SUPPLIER_ID AND IBMT.INV_BOOK_ID = MT.INV_BOOK_ID AND ITEMS_MT.ITEM_ID = DET.ITEM_ID AND ITEMS_MT.ITEM_TYPE_ID = ITEM_TYPE.ITEM_TYPE_ID AND IBMT.SUB_INV_ID = SUB_INV.SUB_INV_ID AND SUB_INV.INV_ORG_ID = IOMT.INV_ORG_ID AND DET.MATCH_WITH_ID = POD.PO_DET_ID(+) AND IOMT.OP_SUPP_ID <> MT.SUPPLIER_ID AND MT.GRN_DATE BETWEEN TO_DATE('$from', 'DD-MM-YY') AND TO_DATE('$to', 'DD-MM-YY') AND ITEMS_MT.ITEM_CODE BETWEEN '$item_code_from' AND '$item_code_to'UNION ALL SELECT SUB_INV.qty_decimal_places, SUB_INV.SUB_INV_DESC, IBMT.SHORT_DESC            TYPE, 0                          INOUT, MT.ISSUE_NO                DOC_NUMBER, MT.issue_ref_no            REF_NO, DET.ITEM_ID, MT.ISSUE_ID                MASTER_ID, MT.ISSUE_DATE              DOC_DATE, DET.ISS_DET_ID, DET.PRIMARY_QTY            QTY, DET.ISSUE_AMOUNT           AMOUNT, MT.INV_TRANSACTION_NO, VCC.CODE_DESC              DESCRIPTION, 2                          FLAG FROM ISSUE_MT               MT, ISSUE_DETAIL           DET, VIEW_CODE_COMBINATIONS VCC, INV_BOOKS_MT           IBMT, ITEMS_MT, WIZ_ITEM_TYPE_MT       ITEM_TYPE, SUB_INVENTORY_MT       SUB_INV WHERE MT.ISSUE_ID = DET.ISSUE_ID AND MT.TRANS_TYPE = 'I'AND DET.cC_CODE_COMB_ID = VCC.CODE_COMBINATION_ID AND IBMT.INV_BOOK_ID = MT.INV_BOOK_ID AND ITEMS_MT.ITEM_ID = DET.ITEM_ID AND ITEMS_MT.ITEM_TYPE_ID = ITEM_TYPE.ITEM_TYPE_ID AND IBMT.SUB_INV_ID = SUB_INV.SUB_INV_ID AND MT.ISSUE_DATE BETWEEN TO_DATE('$from', 'DD-MM-YY') AND TO_DATE('$to', 'DD-MM-YY') AND ITEMS_MT.ITEM_CODE BETWEEN '$item_code_from' AND '$item_code_to'union ALL SELECT SUB_INV.qty_decimal_places, SUB_INV.SUB_INV_DESC, IBMT.SHORT_DESC            TYPE, 1                          INOUT, MT.ISSUE_NO                DOC_NUMBER, MT.issue_ref_no            REF_NO, DET.ITEM_ID, MT.ISSUE_ID                MASTER_ID, MT.ISSUE_DATE              DOC_DATE, DET.ISS_DET_ID, DET.PRIMARY_QTY            QTY, DET.ISSUE_AMOUNT           AMOUNT, MT.INV_TRANSACTION_NO, VCC.CODE_DESC              DESCRIPTION, 0                          FLAG FROM ISSUE_MT               MT, ISSUE_DETAIL           DET, VIEW_CODE_COMBINATIONS VCC, INV_BOOKS_MT           IBMT, ITEMS_MT, WIZ_ITEM_TYPE_MT       ITEM_TYPE, SUB_INVENTORY_MT       SUB_INV WHERE MT.ISSUE_ID = DET.ISSUE_ID AND MT.TRANS_TYPE = 'R'AND DET.CC_CODE_COMB_ID = VCC.CODE_COMBINATION_ID AND IBMT.INV_BOOK_ID = MT.INV_BOOK_ID AND ITEMS_MT.ITEM_ID = DET.ITEM_ID AND ITEMS_MT.ITEM_TYPE_ID = ITEM_TYPE.ITEM_TYPE_ID AND IBMT.SUB_INV_ID = SUB_INV.SUB_INV_ID AND MT.ISSUE_DATE BETWEEN TO_DATE('$from', 'DD-MM-YY') AND TO_DATE('$to', 'DD-MM-YY') AND ITEMS_MT.ITEM_CODE BETWEEN '$item_code_from' AND '$item_code_to'UNION ALL SELECT SUB_INV.qty_decimal_places, SUB_INV.SUB_INV_DESC, IBMT.SHORT_DESC TYPE, 0 INOUT, MT.DC_NO DOC_NUMBER, MT.dc_ref_no REF_NO, DET.ITEM_ID, MT.DC_ID MASTER_ID, MT.DC_DATE DOC_DATE, DET.DC_DET_ID, NVL(DET.PRIMARY_QTY, 0) QTY, NVL(DET.cost_of_sale, 0) AMOUNT, MT.INV_TRANSACTION_NO, CMT.COMPANY_NAME DESCRIPTION, 2 FLAG FROM DC_MT            MT, DC_DETAIL        DET, INV_BOOKS_MT     IBMT, ITEMS_MT, WIZ_ITEM_TYPE_MT ITEM_TYPE, CUSTOMER_MT      CMT, SUB_INVENTORY_MT SUB_INV WHERE MT.DC_ID = DET.DC_ID AND MT.INV_BOOK_ID = IBMT.INV_BOOK_ID AND ITEMS_MT.ITEM_ID = DET.ITEM_ID AND ITEMS_MT.ITEM_TYPE_ID = ITEM_TYPE.ITEM_TYPE_ID AND IBMT.SUB_INV_ID = SUB_INV.SUB_INV_ID AND CMT.CUSTOMER_ID = MT.CUSTOMER_ID AND MT.DC_DATE BETWEEN TO_DATE('$from', 'DD-MM-YY') AND TO_DATE('$to', 'DD-MM-YY') AND ITEMS_MT.ITEM_CODE BETWEEN '$item_code_from' AND '$item_code_to'UNION ALL SELECT SUB_INV.qty_decimal_places, SUB_INV.SUB_INV_DESC, IBMT.SHORT_DESC TYPE, 1 INOUT, MT.PROD_NO DOC_NUMBER, MT.reference_no REF_NO, DET.ITEM_ID, MT.PROD_ID MASTER_ID, MT.PROD_DATE DOC_DATE, DET.PROD_DET_ID, NVL(DET.QTY_PRODUCED, 0) QTY, NVL(DET.STANDARD_AMOUNT, 0) AMOUNT, MT.INV_TRANSACTION_NO, VCC.CODE_DESC DESCRIPTION, 0 FLAG FROM PRODUCTION_MT          MT, PRODUCTION_DETAIL      DET, VIEW_CODE_COMBINATIONS VCC, INV_BOOKS_MT           IBMT, ITEMS_MT, WIZ_ITEM_TYPE_MT       ITEM_TYPE, SUB_INVENTORY_MT       SUB_INV WHERE MT.PROD_ID = DET.PROD_ID AND IBMT.INV_BOOK_ID = MT.INV_BOOK_ID AND DET.LOC_CODE_COMB_ID = VCC.CODE_COMBINATION_ID AND ITEMS_MT.ITEM_ID = DET.ITEM_ID AND ITEMS_MT.ITEM_TYPE_ID = ITEM_TYPE.ITEM_TYPE_ID AND IBMT.SUB_INV_ID = SUB_INV.SUB_INV_ID AND MT.PROD_DATE BETWEEN TO_DATE('$from', 'DD-MM-YY') AND TO_DATE('$to', 'DD-MM-YY') AND ITEMS_MT.ITEM_CODE BETWEEN '$item_code_from' AND '$item_code_to'UNION ALL SELECT SUB_INV.qty_decimal_places, SUB_INV.SUB_INV_DESC, IBMT.SHORT_DESC TYPE, 0 INOUT, MT.RMA_NO DOC_NUMBER, MT.RMA_REF_NO REF_NO, DET.ITEM_ID, MT.RMA_OUT_ID MASTER_ID, MT.RMA_DATE DOC_DATE, DET.RMA_OUT_DET_ID, NVL(DET.PRI_ACCEPTED_QTY, 0) QTY, NVL(DET.RMA_OUT_LINE_AMOUNT, 0) AMOUNT, MT.INV_TRANSACTION_NO, SMT.company_name DESCRIPTION, 2 FLAG FROM RMA_OUTWARD_MT         MT, RMA_OUTWARD_DET        DET, VIEW_CODE_COMBINATIONS VCC, INV_BOOKS_MT           IBMT, SUPPLIER_MT            SMT, ITEMS_MT, WIZ_ITEM_TYPE_MT       ITEM_TYPE, SUB_INVENTORY_MT       SUB_INV WHERE MT.RMA_OUT_ID = DET.RMA_OUT_ID AND DET.LOC_CODE_COMBINATION_ID = VCC.CODE_COMBINATION_ID AND IBMT.INV_BOOK_ID = MT.INV_BOOK_ID AND ITEMS_MT.ITEM_ID = DET.ITEM_ID AND MT.SUPPLIER_ID = SMT.SUPPLIER_ID AND ITEMS_MT.ITEM_TYPE_ID = ITEM_TYPE.ITEM_TYPE_ID AND IBMT.SUB_INV_ID = SUB_INV.SUB_INV_ID AND MT.RMA_DATE BETWEEN TO_DATE('$from', 'DD-MM-YY') AND TO_DATE('$to', 'DD-MM-YY') AND ITEMS_MT.ITEM_CODE BETWEEN '$item_code_from' AND '$item_code_to'UNION ALL SELECT SUB_INV.qty_decimal_places, SUB_INV.SUB_INV_DESC, IBMT.SHORT_DESC TYPE, 1 INOUT, MT.RMA_NO DOC_NUMBER, MT.RMA_REF_NO REF_NO, DET.ITEM_ID, MT.RMA_INWARD_ID MASTER_ID, MT.RMA_DATE DOC_DATE, DET.RMA_INWARD_DET_ID, NVL(DET.PRI_ACCEPTED_QTY, 0) QTY, NVL(DET.RMA_IN_LINE_AMOUNT, 0) AMOUNT, MT.INV_TRANSACTION_NO, CMT.company_name DESCRIPTION, 0 FLAG FROM RMA_INWARD_MT          MT, RMA_INWARD_DET         DET, VIEW_CODE_COMBINATIONS VCC, CUSTOMER_MT            CMT, INV_BOOKS_MT           IBMT, ITEMS_MT, WIZ_ITEM_TYPE_MT       ITEM_TYPE, SUB_INVENTORY_MT       SUB_INV WHERE MT.RMA_INWARD_ID = DET.RMA_INWARD_ID AND DET.LOC_CODE_COMB_ID = VCC.CODE_COMBINATION_ID AND IBMT.INV_BOOK_ID = MT.INV_BOOK_ID AND ITEMS_MT.ITEM_ID = DET.ITEM_ID AND MT.CUSTOMER_ID = CMT.customer_id AND ITEMS_MT.ITEM_TYPE_ID = ITEM_TYPE.ITEM_TYPE_ID AND IBMT.SUB_INV_ID = SUB_INV.SUB_INV_ID AND MT.RMA_DATE BETWEEN TO_DATE('$from', 'DD-MM-YY') AND TO_DATE('$to', 'DD-MM-YY') AND ITEMS_MT.ITEM_CODE BETWEEN '$item_code_from' AND '$item_code_to'UNION ALL SELECT SUB_INV.qty_decimal_places, SUB_INV.SUB_INV_DESC, IBMT.SHORT_DESC TYPE, 0 INOUT, MT.TRANS_NO DOC_NUMBER, NULL REF_NO, DET.ITEM_ID, MT.ISS_TRANS_ID MASTER_ID, MT.TRANS_DATE DOC_DATE, DET.ISS_TRANS_DET_ID, NVL(DET.PIRMARY_QTY, 0) QTY, NVL(DET.AMOUNT, 0) AMOUNT, MT.INV_TRANSACTION_NO, 'Issued to (' || TO_sub_inv.short_desc || ') ' || VCC.CODE_DESC DESCRIPTION, 1 FLAG FROM TRANS_ISSUE_MT         MT, TRANS_ISSUE_DETAIL     DET, VIEW_CODE_COMBINATIONS VCC, INV_BOOKS_MT           IBMT, ITEMS_MT, WIZ_ITEM_TYPE_MT       ITEM_TYPE, SUB_INVENTORY_MT       SUB_INV, SUB_INVENTORY_MT       TO_SUB_INV WHERE MT.ISS_TRANS_ID = DET.ISS_TRANS_ID AND DET.TO_CODE_COMB_ID = VCC.CODE_COMBINATION_ID AND IBMT.INV_BOOK_ID = MT.INV_BOOK_ID AND ITEMS_MT.ITEM_ID = DET.ITEM_ID AND ITEMS_MT.ITEM_TYPE_ID = ITEM_TYPE.ITEM_TYPE_ID AND IBMT.SUB_INV_ID = SUB_INV.SUB_INV_ID AND MT.TO_SUB_INV = TO_SUB_INV.SUB_INV_ID(+) AND MT.TRANS_DATE BETWEEN TO_DATE('$from', 'DD-MM-YY') AND TO_DATE('$to', 'DD-MM-YY') AND ITEMS_MT.ITEM_CODE BETWEEN '$item_code_from' AND '$item_code_to'UNION ALL SELECT SUB_INV.qty_decimal_places, SUB_INV.SUB_INV_DESC, IBMT.SHORT_DESC TYPE, 1 INOUT, MT.TRANS_NO DOC_NUMBER, NULL REF_NO, ISS_DET.ITEM_ID, MT.RCT_TRANS_ID MASTER_ID, MT.RECEIPT_DATE DOC_DATE, DET.RCT_TRANS_DET_ID, NVL(DET.PRIMARY_QTY, 0) QTY, NVL(DECODE(ISS_DET.PIRMARY_QTY, 0, 0, (ISS_DET.AMOUNT / ISS_DET.PIRMARY_QTY)) * DET.PRIMARY_QTY, 0) AMOUNT, MT.INV_TRANSACTION_NO, 'Received from (' || frm_sub_inv.short_desc || ') ' || VCC.CODE_DESC DESCRIPTION, 1 FLAG FROM TRANS_RCT_MT           MT, TRANS_RCT_DET          DET, TRANS_ISSUE_DETAIL     ISS_DET, TRANS_ISSUE_MT         ISS_MT, INV_BOOKS_MT           ISS_BOOK_ID, VIEW_CODE_COMBINATIONS VCC, INV_BOOKS_MT           IBMT, ITEMS_MT, WIZ_ITEM_TYPE_MT       ITEM_TYPE, SUB_INVENTORY_MT       SUB_INV, SUB_INVENTORY_MT       FRM_SUB_INV WHERE MT.RCT_TRANS_ID = DET.RCT_TRANS_ID AND DET.ISS_TRANS_DET_ID = ISS_DET.ISS_TRANS_DET_ID AND iss_DET.FROM_CODE_COMB_ID = VCC.CODE_COMBINATION_ID AND IBMT.INV_BOOK_ID = MT.INV_BOOK_ID AND ITEMS_MT.ITEM_ID = ISS_DET.ITEM_ID AND ITEMS_MT.ITEM_TYPE_ID = ITEM_TYPE.ITEM_TYPE_ID AND IBMT.SUB_INV_ID = SUB_INV.SUB_INV_ID AND ISS_DET.ISS_TRANS_ID = ISS_MT.ISS_TRANS_ID AND ISS_MT.INV_BOOK_ID = ISS_BOOK_ID.INV_BOOK_ID AND ISS_BOOK_ID.SUB_INV_ID = FRM_SUB_INV.SUB_INV_ID AND MT.RECEIPT_DATE BETWEEN TO_DATE('$from', 'DD-MM-YY') AND TO_DATE('$to', 'DD-MM-YY') AND ITEMS_MT.ITEM_CODE BETWEEN '$item_code_from' AND '$item_code_to'UNION ALL SELECT SUB_INV.qty_decimal_places, SUB_INV.SUB_INV_DESC, IBMT.SHORT_DESC TYPE, 1 INOUT, MT.ADJUSTMENT_NO DOC_NUMBER, NULL REF_NO, DET.ITEM_ID, MT.ITEM_ADJUSTMENT_ID MASTER_ID, MT.ADJUSTMENT_DATE DOC_DATE, DET.ITEM_ADJUSTMENT_DET_ID, (NVL(DET.PRIMARY_QTY, 0)) QTY, (NVL(DET.LINE_AMOUNT, 0)) AMOUNT, MT.INV_TRANSACTION_NO, VCC.CODE_DESC DESCRIPTION, DECODE(DET.PRIMARY_QTY + ABS(DET.PRIMARY_QTY), 0, 2, 0) FLAG FROM item_adjustment_mt     MT, item_adjustment_det    DET, VIEW_CODE_COMBINATIONS VCC, INV_BOOKS_MT           IBMT, ITEMS_MT, WIZ_ITEM_TYPE_MT       ITEM_TYPE, SUB_INVENTORY_MT       SUB_INV WHERE MT.ITEM_ADJUSTMENT_ID = det.item_adjustment_id AND DET.LOC_CODE_COMB_ID = VCC.CODE_COMBINATION_ID AND IBMT.INV_BOOK_ID = MT.INV_BOOK_ID AND ITEMS_MT.ITEM_ID = DET.ITEM_ID AND ITEMS_MT.ITEM_TYPE_ID = ITEM_TYPE.ITEM_TYPE_ID AND IBMT.SUB_INV_ID = SUB_INV.SUB_INV_ID AND MT.ADJUSTMENT_DATE BETWEEN TO_DATE('$from', 'DD-MM-YY') AND TO_DATE('$to', 'DD-MM-YY') AND ITEMS_MT.ITEM_CODE BETWEEN '$item_code_from' AND '$item_code_to') TRANS, (SELECT ITEMS.ITEM_ID, PCKG_INV.GET_BALANCE_QTY(2, '01-JAN-16', NULL, 1, 1, ITEMS.ITEM_ID, '30-Jun-17', NULL) QTY, PCKG_INV.GET_BALANCE_AMOUNT(2, '01-JAN-16', NULL, 1, 1, ITEMS.ITEM_ID, '30-Jun-17', NULL) AMOUNT FROM ITEMS_MT ITEMS WHERE 1 = 1 AND ITEMS.ITEM_CODE BETWEEN '0001-0001-0455' AND '0001-0001-0670') OPENING WHERE ITEMS_MT.ITEM_ID = TRANS.ITEM_ID(+) AND ITEMS_MT.ITEM_ID = OPENING.ITEM_ID(+) AND PRI_UOM.UOM_ID = ITEMS_MT.PRIMARY_UOM AND ITEMS_MT.INV_VAL_ID = INV_VAL.INV_VAL_ID AND ITEMS_MT.ITEM_TYPE_ID = ITEM_TYPE.ITEM_TYPE_ID AND ITEMS_MT.ITEM_CODE BETWEEN '0001-0001-0455' AND '0001-0001-0670'ORDER BY TRANS.DOC_DATE, FLAG || TRANS.INV_TRANSACTION_NO");

			     //generate the PDF from the given html
			    return array(
			    	'reports'=>$query,
			    	'item_code_from'=>$item_code_from,
			    	'last_year_id'=>$last_year_id,
			    	'this_year_date'=>$this_year_date,	
			    	'previous_date'=>$previous_date,		
			    	'item_code_to'=>$item_code_to,
			    	'from'=>$from,
			    	'to'=>$to,
			    	'inventory_org'=>$inventory_org,
			    	'sub_inventory'=>$sub_inventory,
			    	'locator'=>$locator,
			    	'locator_desc'=>$locator_desc,
			    	'item_type'=>$item_type,
			    	'exclude'=>$exclude,
			    	'quantitaive'=>$quantitaive,
			    	'primary_qty'=>$primary_qty

			    );
	}
	public function load_report(){
		$requestData 					= $_REQUEST;
		$item_code_from 				=$this->session->userdata('item_code_from');
		$item_code_to 					=$this->session->userdata('item_code_to');
		$last_year_id 					=$this->session->userdata('last_year_id');
		$this_year_date 				=$this->session->userdata('this_year_date');
		$previous_date 					=$this->session->userdata('previous_date');
		$from 							=$this->session->userdata('from');
		$to 	
								=$this->session->userdata('to');
		$columns = array(
			  			// datatable column index  => database column name
		      			0 => 'DOC_DATE',
		      			1 => 'TYPE',
		      			2 => 'DESCRIPTION'
					);
    $sql = $this->db->query("SELECT VCC.CODE_VALUE, VCC.CODE_DESC, nvl(OPENING.AMOUNT, 0) OPEN_AMOUNT, nvl(OPENING.QTY, 0) OPEN_QTY, TRANS.INOUT, TRANS.TYPE, TRANS.MASTER_ID, TRANS.DOC_NUMBER, TRANS.REF_NO, TRANS.DOC_DATE, TRANS.QTY, TRANS.AMOUNT, decode(NVL(TRANS.QTY, 0), 0, 0, TRANS.AMOUNT / TRANS.QTY) RATE, TRANS.INV_TRANSACTION_NO, TRANS.ITEM_ID, ITEMS_MT.ITEM_CODE, ITEMS_MT.ITEM_DESC, TRANS.DESCRIPTION, pri_uom.uom_tiny_desc, INV_VAL.INV_VAL_DESC, TRANS.SUB_INV_DESC, FLAG FROM CODE_COMBINATION_VALUES VCC, ITEMS_MT, WIZ_UOM_MT PRI_UOM, wiz_inv_val_method_mt inv_val, WIZ_ITEM_TYPE_MT ITEM_TYPE, (SELECT SUB_INV.qty_decimal_places, SUB_INV.SUB_INV_DESC, IBMT.SHORT_DESC TYPE, 1 INOUT, MT.GRN_NO DOC_NUMBER, mt.grn_ref_no REF_NO, DET.ITEM_ID, MT.GRN_ID MASTER_ID, MT.GRN_DATE DOC_DATE, DET.GRN_DET_ID, DET.PRIMARY_ACCEPTED_QTY QTY, NVL(DET.GRN_LINE_AMOUNT, POD.TC_AMOUNT) AMOUNT, MT.INV_TRANSACTION_NO, SMT.COMPANY_NAME DESCRIPTION, 0 FLAG FROM GRN_MT MT, GRN_DETAIL          DET, PURCHASE_ORDER_DET  POD, SUPPLIER_MT         SMT, INV_BOOKS_MT        IBMT, ITEMS_MT, WIZ_ITEM_TYPE_MT    ITEM_TYPE, SUB_INVENTORY_MT    SUB_INV, INV_ORGANIZATION_MT IOMT WHERE MT.GRN_ID = DET.GRN_ID AND MT.SUPPLIER_ID = SMT.SUPPLIER_ID AND IBMT.INV_BOOK_ID = MT.INV_BOOK_ID AND ITEMS_MT.ITEM_ID = DET.ITEM_ID AND ITEMS_MT.ITEM_TYPE_ID = ITEM_TYPE.ITEM_TYPE_ID AND IBMT.SUB_INV_ID = SUB_INV.SUB_INV_ID AND SUB_INV.INV_ORG_ID = IOMT.INV_ORG_ID AND DET.MATCH_WITH_ID = POD.PO_DET_ID(+) AND IOMT.OP_SUPP_ID <> MT.SUPPLIER_ID AND MT.GRN_DATE BETWEEN TO_DATE('$from', 'DD-MM-YY') AND TO_DATE('$to', 'DD-MM-YY') AND ITEMS_MT.ITEM_CODE BETWEEN '$item_code_from' AND '$item_code_to'UNION ALL SELECT SUB_INV.qty_decimal_places, SUB_INV.SUB_INV_DESC, IBMT.SHORT_DESC            TYPE, 0                          INOUT, MT.ISSUE_NO                DOC_NUMBER, MT.issue_ref_no            REF_NO, DET.ITEM_ID, MT.ISSUE_ID                MASTER_ID, MT.ISSUE_DATE              DOC_DATE, DET.ISS_DET_ID, DET.PRIMARY_QTY            QTY, DET.ISSUE_AMOUNT           AMOUNT, MT.INV_TRANSACTION_NO, VCC.CODE_DESC              DESCRIPTION, 2                          FLAG FROM ISSUE_MT               MT, ISSUE_DETAIL           DET, VIEW_CODE_COMBINATIONS VCC, INV_BOOKS_MT           IBMT, ITEMS_MT, WIZ_ITEM_TYPE_MT       ITEM_TYPE, SUB_INVENTORY_MT       SUB_INV WHERE MT.ISSUE_ID = DET.ISSUE_ID AND MT.TRANS_TYPE = 'I'AND DET.cC_CODE_COMB_ID = VCC.CODE_COMBINATION_ID AND IBMT.INV_BOOK_ID = MT.INV_BOOK_ID AND ITEMS_MT.ITEM_ID = DET.ITEM_ID AND ITEMS_MT.ITEM_TYPE_ID = ITEM_TYPE.ITEM_TYPE_ID AND IBMT.SUB_INV_ID = SUB_INV.SUB_INV_ID AND MT.ISSUE_DATE BETWEEN TO_DATE('$from', 'DD-MM-YY') AND TO_DATE('$to', 'DD-MM-YY') AND ITEMS_MT.ITEM_CODE BETWEEN '$item_code_from' AND '$item_code_to'union ALL SELECT SUB_INV.qty_decimal_places, SUB_INV.SUB_INV_DESC, IBMT.SHORT_DESC            TYPE, 1                          INOUT, MT.ISSUE_NO                DOC_NUMBER, MT.issue_ref_no            REF_NO, DET.ITEM_ID, MT.ISSUE_ID                MASTER_ID, MT.ISSUE_DATE              DOC_DATE, DET.ISS_DET_ID, DET.PRIMARY_QTY            QTY, DET.ISSUE_AMOUNT           AMOUNT, MT.INV_TRANSACTION_NO, VCC.CODE_DESC              DESCRIPTION, 0                          FLAG FROM ISSUE_MT               MT, ISSUE_DETAIL           DET, VIEW_CODE_COMBINATIONS VCC, INV_BOOKS_MT           IBMT, ITEMS_MT, WIZ_ITEM_TYPE_MT       ITEM_TYPE, SUB_INVENTORY_MT       SUB_INV WHERE MT.ISSUE_ID = DET.ISSUE_ID AND MT.TRANS_TYPE = 'R'AND DET.CC_CODE_COMB_ID = VCC.CODE_COMBINATION_ID AND IBMT.INV_BOOK_ID = MT.INV_BOOK_ID AND ITEMS_MT.ITEM_ID = DET.ITEM_ID AND ITEMS_MT.ITEM_TYPE_ID = ITEM_TYPE.ITEM_TYPE_ID AND IBMT.SUB_INV_ID = SUB_INV.SUB_INV_ID AND MT.ISSUE_DATE BETWEEN TO_DATE('$from', 'DD-MM-YY') AND TO_DATE('$to', 'DD-MM-YY') AND ITEMS_MT.ITEM_CODE BETWEEN '$item_code_from' AND '$item_code_to'UNION ALL SELECT SUB_INV.qty_decimal_places, SUB_INV.SUB_INV_DESC, IBMT.SHORT_DESC TYPE, 0 INOUT, MT.DC_NO DOC_NUMBER, MT.dc_ref_no REF_NO, DET.ITEM_ID, MT.DC_ID MASTER_ID, MT.DC_DATE DOC_DATE, DET.DC_DET_ID, NVL(DET.PRIMARY_QTY, 0) QTY, NVL(DET.cost_of_sale, 0) AMOUNT, MT.INV_TRANSACTION_NO, CMT.COMPANY_NAME DESCRIPTION, 2 FLAG FROM DC_MT            MT, DC_DETAIL        DET, INV_BOOKS_MT     IBMT, ITEMS_MT, WIZ_ITEM_TYPE_MT ITEM_TYPE, CUSTOMER_MT      CMT, SUB_INVENTORY_MT SUB_INV WHERE MT.DC_ID = DET.DC_ID AND MT.INV_BOOK_ID = IBMT.INV_BOOK_ID AND ITEMS_MT.ITEM_ID = DET.ITEM_ID AND ITEMS_MT.ITEM_TYPE_ID = ITEM_TYPE.ITEM_TYPE_ID AND IBMT.SUB_INV_ID = SUB_INV.SUB_INV_ID AND CMT.CUSTOMER_ID = MT.CUSTOMER_ID AND MT.DC_DATE BETWEEN TO_DATE('$from', 'DD-MM-YY') AND TO_DATE('$to', 'DD-MM-YY') AND ITEMS_MT.ITEM_CODE BETWEEN '$item_code_from' AND '$item_code_to'UNION ALL SELECT SUB_INV.qty_decimal_places, SUB_INV.SUB_INV_DESC, IBMT.SHORT_DESC TYPE, 1 INOUT, MT.PROD_NO DOC_NUMBER, MT.reference_no REF_NO, DET.ITEM_ID, MT.PROD_ID MASTER_ID, MT.PROD_DATE DOC_DATE, DET.PROD_DET_ID, NVL(DET.QTY_PRODUCED, 0) QTY, NVL(DET.STANDARD_AMOUNT, 0) AMOUNT, MT.INV_TRANSACTION_NO, VCC.CODE_DESC DESCRIPTION, 0 FLAG FROM PRODUCTION_MT          MT, PRODUCTION_DETAIL      DET, VIEW_CODE_COMBINATIONS VCC, INV_BOOKS_MT           IBMT, ITEMS_MT, WIZ_ITEM_TYPE_MT       ITEM_TYPE, SUB_INVENTORY_MT       SUB_INV WHERE MT.PROD_ID = DET.PROD_ID AND IBMT.INV_BOOK_ID = MT.INV_BOOK_ID AND DET.LOC_CODE_COMB_ID = VCC.CODE_COMBINATION_ID AND ITEMS_MT.ITEM_ID = DET.ITEM_ID AND ITEMS_MT.ITEM_TYPE_ID = ITEM_TYPE.ITEM_TYPE_ID AND IBMT.SUB_INV_ID = SUB_INV.SUB_INV_ID AND MT.PROD_DATE BETWEEN TO_DATE('$from', 'DD-MM-YY') AND TO_DATE('$to', 'DD-MM-YY') AND ITEMS_MT.ITEM_CODE BETWEEN '$item_code_from' AND '$item_code_to'UNION ALL SELECT SUB_INV.qty_decimal_places, SUB_INV.SUB_INV_DESC, IBMT.SHORT_DESC TYPE, 0 INOUT, MT.RMA_NO DOC_NUMBER, MT.RMA_REF_NO REF_NO, DET.ITEM_ID, MT.RMA_OUT_ID MASTER_ID, MT.RMA_DATE DOC_DATE, DET.RMA_OUT_DET_ID, NVL(DET.PRI_ACCEPTED_QTY, 0) QTY, NVL(DET.RMA_OUT_LINE_AMOUNT, 0) AMOUNT, MT.INV_TRANSACTION_NO, SMT.company_name DESCRIPTION, 2 FLAG FROM RMA_OUTWARD_MT         MT, RMA_OUTWARD_DET        DET, VIEW_CODE_COMBINATIONS VCC, INV_BOOKS_MT           IBMT, SUPPLIER_MT            SMT, ITEMS_MT, WIZ_ITEM_TYPE_MT       ITEM_TYPE, SUB_INVENTORY_MT       SUB_INV WHERE MT.RMA_OUT_ID = DET.RMA_OUT_ID AND DET.LOC_CODE_COMBINATION_ID = VCC.CODE_COMBINATION_ID AND IBMT.INV_BOOK_ID = MT.INV_BOOK_ID AND ITEMS_MT.ITEM_ID = DET.ITEM_ID AND MT.SUPPLIER_ID = SMT.SUPPLIER_ID AND ITEMS_MT.ITEM_TYPE_ID = ITEM_TYPE.ITEM_TYPE_ID AND IBMT.SUB_INV_ID = SUB_INV.SUB_INV_ID AND MT.RMA_DATE BETWEEN TO_DATE('$from', 'DD-MM-YY') AND TO_DATE('$to', 'DD-MM-YY') AND ITEMS_MT.ITEM_CODE BETWEEN '$item_code_from' AND '$item_code_to'UNION ALL SELECT SUB_INV.qty_decimal_places, SUB_INV.SUB_INV_DESC, IBMT.SHORT_DESC TYPE, 1 INOUT, MT.RMA_NO DOC_NUMBER, MT.RMA_REF_NO REF_NO, DET.ITEM_ID, MT.RMA_INWARD_ID MASTER_ID, MT.RMA_DATE DOC_DATE, DET.RMA_INWARD_DET_ID, NVL(DET.PRI_ACCEPTED_QTY, 0) QTY, NVL(DET.RMA_IN_LINE_AMOUNT, 0) AMOUNT, MT.INV_TRANSACTION_NO, CMT.company_name DESCRIPTION, 0 FLAG FROM RMA_INWARD_MT          MT, RMA_INWARD_DET         DET, VIEW_CODE_COMBINATIONS VCC, CUSTOMER_MT            CMT, INV_BOOKS_MT           IBMT, ITEMS_MT, WIZ_ITEM_TYPE_MT       ITEM_TYPE, SUB_INVENTORY_MT       SUB_INV WHERE MT.RMA_INWARD_ID = DET.RMA_INWARD_ID AND DET.LOC_CODE_COMB_ID = VCC.CODE_COMBINATION_ID AND IBMT.INV_BOOK_ID = MT.INV_BOOK_ID AND ITEMS_MT.ITEM_ID = DET.ITEM_ID AND MT.CUSTOMER_ID = CMT.customer_id AND ITEMS_MT.ITEM_TYPE_ID = ITEM_TYPE.ITEM_TYPE_ID AND IBMT.SUB_INV_ID = SUB_INV.SUB_INV_ID AND MT.RMA_DATE BETWEEN TO_DATE('$from', 'DD-MM-YY') AND TO_DATE('$to', 'DD-MM-YY') AND ITEMS_MT.ITEM_CODE BETWEEN '$item_code_from' AND '$item_code_to'UNION ALL SELECT SUB_INV.qty_decimal_places, SUB_INV.SUB_INV_DESC, IBMT.SHORT_DESC TYPE, 0 INOUT, MT.TRANS_NO DOC_NUMBER, NULL REF_NO, DET.ITEM_ID, MT.ISS_TRANS_ID MASTER_ID, MT.TRANS_DATE DOC_DATE, DET.ISS_TRANS_DET_ID, NVL(DET.PIRMARY_QTY, 0) QTY, NVL(DET.AMOUNT, 0) AMOUNT, MT.INV_TRANSACTION_NO, 'Issued to (' || TO_sub_inv.short_desc || ') ' || VCC.CODE_DESC DESCRIPTION, 1 FLAG FROM TRANS_ISSUE_MT         MT, TRANS_ISSUE_DETAIL     DET, VIEW_CODE_COMBINATIONS VCC, INV_BOOKS_MT           IBMT, ITEMS_MT, WIZ_ITEM_TYPE_MT       ITEM_TYPE, SUB_INVENTORY_MT       SUB_INV, SUB_INVENTORY_MT       TO_SUB_INV WHERE MT.ISS_TRANS_ID = DET.ISS_TRANS_ID AND DET.TO_CODE_COMB_ID = VCC.CODE_COMBINATION_ID AND IBMT.INV_BOOK_ID = MT.INV_BOOK_ID AND ITEMS_MT.ITEM_ID = DET.ITEM_ID AND ITEMS_MT.ITEM_TYPE_ID = ITEM_TYPE.ITEM_TYPE_ID AND IBMT.SUB_INV_ID = SUB_INV.SUB_INV_ID AND MT.TO_SUB_INV = TO_SUB_INV.SUB_INV_ID(+) AND MT.TRANS_DATE BETWEEN TO_DATE('$from', 'DD-MM-YY') AND TO_DATE('$to', 'DD-MM-YY') AND ITEMS_MT.ITEM_CODE BETWEEN '$item_code_from' AND '$item_code_to'UNION ALL SELECT SUB_INV.qty_decimal_places, SUB_INV.SUB_INV_DESC, IBMT.SHORT_DESC TYPE, 1 INOUT, MT.TRANS_NO DOC_NUMBER, NULL REF_NO, ISS_DET.ITEM_ID, MT.RCT_TRANS_ID MASTER_ID, MT.RECEIPT_DATE DOC_DATE, DET.RCT_TRANS_DET_ID, NVL(DET.PRIMARY_QTY, 0) QTY, NVL(DECODE(ISS_DET.PIRMARY_QTY, 0, 0, (ISS_DET.AMOUNT / ISS_DET.PIRMARY_QTY)) * DET.PRIMARY_QTY, 0) AMOUNT, MT.INV_TRANSACTION_NO, 'Received from (' || frm_sub_inv.short_desc || ') ' || VCC.CODE_DESC DESCRIPTION, 1 FLAG FROM TRANS_RCT_MT           MT, TRANS_RCT_DET          DET, TRANS_ISSUE_DETAIL     ISS_DET, TRANS_ISSUE_MT         ISS_MT, INV_BOOKS_MT           ISS_BOOK_ID, VIEW_CODE_COMBINATIONS VCC, INV_BOOKS_MT           IBMT, ITEMS_MT, WIZ_ITEM_TYPE_MT       ITEM_TYPE, SUB_INVENTORY_MT       SUB_INV, SUB_INVENTORY_MT       FRM_SUB_INV WHERE MT.RCT_TRANS_ID = DET.RCT_TRANS_ID AND DET.ISS_TRANS_DET_ID = ISS_DET.ISS_TRANS_DET_ID AND iss_DET.FROM_CODE_COMB_ID = VCC.CODE_COMBINATION_ID AND IBMT.INV_BOOK_ID = MT.INV_BOOK_ID AND ITEMS_MT.ITEM_ID = ISS_DET.ITEM_ID AND ITEMS_MT.ITEM_TYPE_ID = ITEM_TYPE.ITEM_TYPE_ID AND IBMT.SUB_INV_ID = SUB_INV.SUB_INV_ID AND ISS_DET.ISS_TRANS_ID = ISS_MT.ISS_TRANS_ID AND ISS_MT.INV_BOOK_ID = ISS_BOOK_ID.INV_BOOK_ID AND ISS_BOOK_ID.SUB_INV_ID = FRM_SUB_INV.SUB_INV_ID AND MT.RECEIPT_DATE BETWEEN TO_DATE('$from', 'DD-MM-YY') AND TO_DATE('$to', 'DD-MM-YY') AND ITEMS_MT.ITEM_CODE BETWEEN '$item_code_from' AND '$item_code_to'UNION ALL SELECT SUB_INV.qty_decimal_places, SUB_INV.SUB_INV_DESC, IBMT.SHORT_DESC TYPE, 1 INOUT, MT.ADJUSTMENT_NO DOC_NUMBER, NULL REF_NO, DET.ITEM_ID, MT.ITEM_ADJUSTMENT_ID MASTER_ID, MT.ADJUSTMENT_DATE DOC_DATE, DET.ITEM_ADJUSTMENT_DET_ID, (NVL(DET.PRIMARY_QTY, 0)) QTY, (NVL(DET.LINE_AMOUNT, 0)) AMOUNT, MT.INV_TRANSACTION_NO, VCC.CODE_DESC DESCRIPTION, DECODE(DET.PRIMARY_QTY + ABS(DET.PRIMARY_QTY), 0, 2, 0) FLAG FROM item_adjustment_mt     MT, item_adjustment_det    DET, VIEW_CODE_COMBINATIONS VCC, INV_BOOKS_MT           IBMT, ITEMS_MT, WIZ_ITEM_TYPE_MT       ITEM_TYPE, SUB_INVENTORY_MT       SUB_INV WHERE MT.ITEM_ADJUSTMENT_ID = det.item_adjustment_id AND DET.LOC_CODE_COMB_ID = VCC.CODE_COMBINATION_ID AND IBMT.INV_BOOK_ID = MT.INV_BOOK_ID AND ITEMS_MT.ITEM_ID = DET.ITEM_ID AND ITEMS_MT.ITEM_TYPE_ID = ITEM_TYPE.ITEM_TYPE_ID AND IBMT.SUB_INV_ID = SUB_INV.SUB_INV_ID AND MT.ADJUSTMENT_DATE BETWEEN TO_DATE('$from', 'DD-MM-YY') AND TO_DATE('$to', 'DD-MM-YY') AND ITEMS_MT.ITEM_CODE BETWEEN '$item_code_from' AND '$item_code_to') TRANS, (SELECT ITEMS.ITEM_ID, PCKG_INV.GET_BALANCE_QTY(2, '01-JAN-16', NULL, 1, 1, ITEMS.ITEM_ID, '30-Jun-17', NULL) QTY, PCKG_INV.GET_BALANCE_AMOUNT(2, '01-JAN-16', NULL, 1, 1, ITEMS.ITEM_ID, '30-Jun-17', NULL) AMOUNT FROM ITEMS_MT ITEMS WHERE 1 = 1 AND ITEMS.ITEM_CODE BETWEEN '0001-0001-0455' AND '0001-0001-0670') OPENING WHERE ITEMS_MT.ITEM_ID = TRANS.ITEM_ID(+) AND ITEMS_MT.ITEM_ID = OPENING.ITEM_ID(+) AND PRI_UOM.UOM_ID = ITEMS_MT.PRIMARY_UOM AND ITEMS_MT.INV_VAL_ID = INV_VAL.INV_VAL_ID AND ITEMS_MT.ITEM_TYPE_ID = ITEM_TYPE.ITEM_TYPE_ID AND ITEMS_MT.ITEM_CODE BETWEEN '0001-0001-0455' AND '0001-0001-0670'ORDER BY TRANS.DOC_DATE, FLAG || TRANS.INV_TRANSACTION_NO");
    $totalData     = $sql->num_rows();
    $totalFiltered = $totalData;
    $sql ="SELECT VCC.CODE_VALUE, VCC.CODE_DESC, nvl(OPENING.AMOUNT, 0) OPEN_AMOUNT, nvl(OPENING.QTY, 0) OPEN_QTY, TRANS.INOUT, TRANS.TYPE, TRANS.MASTER_ID, TRANS.DOC_NUMBER, TRANS.REF_NO, TRANS.DOC_DATE, TRANS.QTY, TRANS.AMOUNT, decode(NVL(TRANS.QTY, 0), 0, 0, TRANS.AMOUNT / TRANS.QTY) RATE, TRANS.INV_TRANSACTION_NO, TRANS.ITEM_ID, ITEMS_MT.ITEM_CODE, ITEMS_MT.ITEM_DESC, TRANS.DESCRIPTION, pri_uom.uom_tiny_desc, INV_VAL.INV_VAL_DESC, TRANS.SUB_INV_DESC, FLAG FROM CODE_COMBINATION_VALUES VCC, ITEMS_MT, WIZ_UOM_MT PRI_UOM, wiz_inv_val_method_mt inv_val, WIZ_ITEM_TYPE_MT ITEM_TYPE, (SELECT SUB_INV.qty_decimal_places, SUB_INV.SUB_INV_DESC, IBMT.SHORT_DESC TYPE, 1 INOUT, MT.GRN_NO DOC_NUMBER, mt.grn_ref_no REF_NO, DET.ITEM_ID, MT.GRN_ID MASTER_ID, MT.GRN_DATE DOC_DATE, DET.GRN_DET_ID, DET.PRIMARY_ACCEPTED_QTY QTY, NVL(DET.GRN_LINE_AMOUNT, POD.TC_AMOUNT) AMOUNT, MT.INV_TRANSACTION_NO, SMT.COMPANY_NAME DESCRIPTION, 0 FLAG FROM GRN_MT MT, GRN_DETAIL          DET, PURCHASE_ORDER_DET  POD, SUPPLIER_MT         SMT, INV_BOOKS_MT        IBMT, ITEMS_MT, WIZ_ITEM_TYPE_MT    ITEM_TYPE, SUB_INVENTORY_MT    SUB_INV, INV_ORGANIZATION_MT IOMT WHERE MT.GRN_ID = DET.GRN_ID AND MT.SUPPLIER_ID = SMT.SUPPLIER_ID AND IBMT.INV_BOOK_ID = MT.INV_BOOK_ID AND ITEMS_MT.ITEM_ID = DET.ITEM_ID AND ITEMS_MT.ITEM_TYPE_ID = ITEM_TYPE.ITEM_TYPE_ID AND IBMT.SUB_INV_ID = SUB_INV.SUB_INV_ID AND SUB_INV.INV_ORG_ID = IOMT.INV_ORG_ID AND DET.MATCH_WITH_ID = POD.PO_DET_ID(+) AND IOMT.OP_SUPP_ID <> MT.SUPPLIER_ID AND MT.GRN_DATE BETWEEN TO_DATE('$from', 'DD-MM-YY') AND TO_DATE('$to', 'DD-MM-YY') AND ITEMS_MT.ITEM_CODE BETWEEN '$item_code_from' AND '$item_code_to'UNION ALL SELECT SUB_INV.qty_decimal_places, SUB_INV.SUB_INV_DESC, IBMT.SHORT_DESC            TYPE, 0                          INOUT, MT.ISSUE_NO                DOC_NUMBER, MT.issue_ref_no            REF_NO, DET.ITEM_ID, MT.ISSUE_ID                MASTER_ID, MT.ISSUE_DATE              DOC_DATE, DET.ISS_DET_ID, DET.PRIMARY_QTY            QTY, DET.ISSUE_AMOUNT           AMOUNT, MT.INV_TRANSACTION_NO, VCC.CODE_DESC              DESCRIPTION, 2                          FLAG FROM ISSUE_MT               MT, ISSUE_DETAIL           DET, VIEW_CODE_COMBINATIONS VCC, INV_BOOKS_MT           IBMT, ITEMS_MT, WIZ_ITEM_TYPE_MT       ITEM_TYPE, SUB_INVENTORY_MT       SUB_INV WHERE MT.ISSUE_ID = DET.ISSUE_ID AND MT.TRANS_TYPE = 'I'AND DET.cC_CODE_COMB_ID = VCC.CODE_COMBINATION_ID AND IBMT.INV_BOOK_ID = MT.INV_BOOK_ID AND ITEMS_MT.ITEM_ID = DET.ITEM_ID AND ITEMS_MT.ITEM_TYPE_ID = ITEM_TYPE.ITEM_TYPE_ID AND IBMT.SUB_INV_ID = SUB_INV.SUB_INV_ID AND MT.ISSUE_DATE BETWEEN TO_DATE('$from', 'DD-MM-YY') AND TO_DATE('$to', 'DD-MM-YY') AND ITEMS_MT.ITEM_CODE BETWEEN '$item_code_from' AND '$item_code_to'union ALL SELECT SUB_INV.qty_decimal_places, SUB_INV.SUB_INV_DESC, IBMT.SHORT_DESC            TYPE, 1                          INOUT, MT.ISSUE_NO                DOC_NUMBER, MT.issue_ref_no            REF_NO, DET.ITEM_ID, MT.ISSUE_ID                MASTER_ID, MT.ISSUE_DATE              DOC_DATE, DET.ISS_DET_ID, DET.PRIMARY_QTY            QTY, DET.ISSUE_AMOUNT           AMOUNT, MT.INV_TRANSACTION_NO, VCC.CODE_DESC              DESCRIPTION, 0                          FLAG FROM ISSUE_MT               MT, ISSUE_DETAIL           DET, VIEW_CODE_COMBINATIONS VCC, INV_BOOKS_MT           IBMT, ITEMS_MT, WIZ_ITEM_TYPE_MT       ITEM_TYPE, SUB_INVENTORY_MT       SUB_INV WHERE MT.ISSUE_ID = DET.ISSUE_ID AND MT.TRANS_TYPE = 'R'AND DET.CC_CODE_COMB_ID = VCC.CODE_COMBINATION_ID AND IBMT.INV_BOOK_ID = MT.INV_BOOK_ID AND ITEMS_MT.ITEM_ID = DET.ITEM_ID AND ITEMS_MT.ITEM_TYPE_ID = ITEM_TYPE.ITEM_TYPE_ID AND IBMT.SUB_INV_ID = SUB_INV.SUB_INV_ID AND MT.ISSUE_DATE BETWEEN TO_DATE('$from', 'DD-MM-YY') AND TO_DATE('$to', 'DD-MM-YY') AND ITEMS_MT.ITEM_CODE BETWEEN '$item_code_from' AND '$item_code_to'UNION ALL SELECT SUB_INV.qty_decimal_places, SUB_INV.SUB_INV_DESC, IBMT.SHORT_DESC TYPE, 0 INOUT, MT.DC_NO DOC_NUMBER, MT.dc_ref_no REF_NO, DET.ITEM_ID, MT.DC_ID MASTER_ID, MT.DC_DATE DOC_DATE, DET.DC_DET_ID, NVL(DET.PRIMARY_QTY, 0) QTY, NVL(DET.cost_of_sale, 0) AMOUNT, MT.INV_TRANSACTION_NO, CMT.COMPANY_NAME DESCRIPTION, 2 FLAG FROM DC_MT            MT, DC_DETAIL        DET, INV_BOOKS_MT     IBMT, ITEMS_MT, WIZ_ITEM_TYPE_MT ITEM_TYPE, CUSTOMER_MT      CMT, SUB_INVENTORY_MT SUB_INV WHERE MT.DC_ID = DET.DC_ID AND MT.INV_BOOK_ID = IBMT.INV_BOOK_ID AND ITEMS_MT.ITEM_ID = DET.ITEM_ID AND ITEMS_MT.ITEM_TYPE_ID = ITEM_TYPE.ITEM_TYPE_ID AND IBMT.SUB_INV_ID = SUB_INV.SUB_INV_ID AND CMT.CUSTOMER_ID = MT.CUSTOMER_ID AND MT.DC_DATE BETWEEN TO_DATE('$from', 'DD-MM-YY') AND TO_DATE('$to', 'DD-MM-YY') AND ITEMS_MT.ITEM_CODE BETWEEN '$item_code_from' AND '$item_code_to'UNION ALL SELECT SUB_INV.qty_decimal_places, SUB_INV.SUB_INV_DESC, IBMT.SHORT_DESC TYPE, 1 INOUT, MT.PROD_NO DOC_NUMBER, MT.reference_no REF_NO, DET.ITEM_ID, MT.PROD_ID MASTER_ID, MT.PROD_DATE DOC_DATE, DET.PROD_DET_ID, NVL(DET.QTY_PRODUCED, 0) QTY, NVL(DET.STANDARD_AMOUNT, 0) AMOUNT, MT.INV_TRANSACTION_NO, VCC.CODE_DESC DESCRIPTION, 0 FLAG FROM PRODUCTION_MT          MT, PRODUCTION_DETAIL      DET, VIEW_CODE_COMBINATIONS VCC, INV_BOOKS_MT           IBMT, ITEMS_MT, WIZ_ITEM_TYPE_MT       ITEM_TYPE, SUB_INVENTORY_MT       SUB_INV WHERE MT.PROD_ID = DET.PROD_ID AND IBMT.INV_BOOK_ID = MT.INV_BOOK_ID AND DET.LOC_CODE_COMB_ID = VCC.CODE_COMBINATION_ID AND ITEMS_MT.ITEM_ID = DET.ITEM_ID AND ITEMS_MT.ITEM_TYPE_ID = ITEM_TYPE.ITEM_TYPE_ID AND IBMT.SUB_INV_ID = SUB_INV.SUB_INV_ID AND MT.PROD_DATE BETWEEN TO_DATE('$from', 'DD-MM-YY') AND TO_DATE('$to', 'DD-MM-YY') AND ITEMS_MT.ITEM_CODE BETWEEN '$item_code_from' AND '$item_code_to'UNION ALL SELECT SUB_INV.qty_decimal_places, SUB_INV.SUB_INV_DESC, IBMT.SHORT_DESC TYPE, 0 INOUT, MT.RMA_NO DOC_NUMBER, MT.RMA_REF_NO REF_NO, DET.ITEM_ID, MT.RMA_OUT_ID MASTER_ID, MT.RMA_DATE DOC_DATE, DET.RMA_OUT_DET_ID, NVL(DET.PRI_ACCEPTED_QTY, 0) QTY, NVL(DET.RMA_OUT_LINE_AMOUNT, 0) AMOUNT, MT.INV_TRANSACTION_NO, SMT.company_name DESCRIPTION, 2 FLAG FROM RMA_OUTWARD_MT         MT, RMA_OUTWARD_DET        DET, VIEW_CODE_COMBINATIONS VCC, INV_BOOKS_MT           IBMT, SUPPLIER_MT            SMT, ITEMS_MT, WIZ_ITEM_TYPE_MT       ITEM_TYPE, SUB_INVENTORY_MT       SUB_INV WHERE MT.RMA_OUT_ID = DET.RMA_OUT_ID AND DET.LOC_CODE_COMBINATION_ID = VCC.CODE_COMBINATION_ID AND IBMT.INV_BOOK_ID = MT.INV_BOOK_ID AND ITEMS_MT.ITEM_ID = DET.ITEM_ID AND MT.SUPPLIER_ID = SMT.SUPPLIER_ID AND ITEMS_MT.ITEM_TYPE_ID = ITEM_TYPE.ITEM_TYPE_ID AND IBMT.SUB_INV_ID = SUB_INV.SUB_INV_ID AND MT.RMA_DATE BETWEEN TO_DATE('$from', 'DD-MM-YY') AND TO_DATE('$to', 'DD-MM-YY') AND ITEMS_MT.ITEM_CODE BETWEEN '$item_code_from' AND '$item_code_to'UNION ALL SELECT SUB_INV.qty_decimal_places, SUB_INV.SUB_INV_DESC, IBMT.SHORT_DESC TYPE, 1 INOUT, MT.RMA_NO DOC_NUMBER, MT.RMA_REF_NO REF_NO, DET.ITEM_ID, MT.RMA_INWARD_ID MASTER_ID, MT.RMA_DATE DOC_DATE, DET.RMA_INWARD_DET_ID, NVL(DET.PRI_ACCEPTED_QTY, 0) QTY, NVL(DET.RMA_IN_LINE_AMOUNT, 0) AMOUNT, MT.INV_TRANSACTION_NO, CMT.company_name DESCRIPTION, 0 FLAG FROM RMA_INWARD_MT          MT, RMA_INWARD_DET         DET, VIEW_CODE_COMBINATIONS VCC, CUSTOMER_MT            CMT, INV_BOOKS_MT           IBMT, ITEMS_MT, WIZ_ITEM_TYPE_MT       ITEM_TYPE, SUB_INVENTORY_MT       SUB_INV WHERE MT.RMA_INWARD_ID = DET.RMA_INWARD_ID AND DET.LOC_CODE_COMB_ID = VCC.CODE_COMBINATION_ID AND IBMT.INV_BOOK_ID = MT.INV_BOOK_ID AND ITEMS_MT.ITEM_ID = DET.ITEM_ID AND MT.CUSTOMER_ID = CMT.customer_id AND ITEMS_MT.ITEM_TYPE_ID = ITEM_TYPE.ITEM_TYPE_ID AND IBMT.SUB_INV_ID = SUB_INV.SUB_INV_ID AND MT.RMA_DATE BETWEEN TO_DATE('$from', 'DD-MM-YY') AND TO_DATE('$to', 'DD-MM-YY') AND ITEMS_MT.ITEM_CODE BETWEEN '$item_code_from' AND '$item_code_to'UNION ALL SELECT SUB_INV.qty_decimal_places, SUB_INV.SUB_INV_DESC, IBMT.SHORT_DESC TYPE, 0 INOUT, MT.TRANS_NO DOC_NUMBER, NULL REF_NO, DET.ITEM_ID, MT.ISS_TRANS_ID MASTER_ID, MT.TRANS_DATE DOC_DATE, DET.ISS_TRANS_DET_ID, NVL(DET.PIRMARY_QTY, 0) QTY, NVL(DET.AMOUNT, 0) AMOUNT, MT.INV_TRANSACTION_NO, 'Issued to (' || TO_sub_inv.short_desc || ') ' || VCC.CODE_DESC DESCRIPTION, 1 FLAG FROM TRANS_ISSUE_MT         MT, TRANS_ISSUE_DETAIL     DET, VIEW_CODE_COMBINATIONS VCC, INV_BOOKS_MT           IBMT, ITEMS_MT, WIZ_ITEM_TYPE_MT       ITEM_TYPE, SUB_INVENTORY_MT       SUB_INV, SUB_INVENTORY_MT       TO_SUB_INV WHERE MT.ISS_TRANS_ID = DET.ISS_TRANS_ID AND DET.TO_CODE_COMB_ID = VCC.CODE_COMBINATION_ID AND IBMT.INV_BOOK_ID = MT.INV_BOOK_ID AND ITEMS_MT.ITEM_ID = DET.ITEM_ID AND ITEMS_MT.ITEM_TYPE_ID = ITEM_TYPE.ITEM_TYPE_ID AND IBMT.SUB_INV_ID = SUB_INV.SUB_INV_ID AND MT.TO_SUB_INV = TO_SUB_INV.SUB_INV_ID(+) AND MT.TRANS_DATE BETWEEN TO_DATE('$from', 'DD-MM-YY') AND TO_DATE('$to', 'DD-MM-YY') AND ITEMS_MT.ITEM_CODE BETWEEN '$item_code_from' AND '$item_code_to'UNION ALL SELECT SUB_INV.qty_decimal_places, SUB_INV.SUB_INV_DESC, IBMT.SHORT_DESC TYPE, 1 INOUT, MT.TRANS_NO DOC_NUMBER, NULL REF_NO, ISS_DET.ITEM_ID, MT.RCT_TRANS_ID MASTER_ID, MT.RECEIPT_DATE DOC_DATE, DET.RCT_TRANS_DET_ID, NVL(DET.PRIMARY_QTY, 0) QTY, NVL(DECODE(ISS_DET.PIRMARY_QTY, 0, 0, (ISS_DET.AMOUNT / ISS_DET.PIRMARY_QTY)) * DET.PRIMARY_QTY, 0) AMOUNT, MT.INV_TRANSACTION_NO, 'Received from (' || frm_sub_inv.short_desc || ') ' || VCC.CODE_DESC DESCRIPTION, 1 FLAG FROM TRANS_RCT_MT           MT, TRANS_RCT_DET          DET, TRANS_ISSUE_DETAIL     ISS_DET, TRANS_ISSUE_MT         ISS_MT, INV_BOOKS_MT           ISS_BOOK_ID, VIEW_CODE_COMBINATIONS VCC, INV_BOOKS_MT           IBMT, ITEMS_MT, WIZ_ITEM_TYPE_MT       ITEM_TYPE, SUB_INVENTORY_MT       SUB_INV, SUB_INVENTORY_MT       FRM_SUB_INV WHERE MT.RCT_TRANS_ID = DET.RCT_TRANS_ID AND DET.ISS_TRANS_DET_ID = ISS_DET.ISS_TRANS_DET_ID AND iss_DET.FROM_CODE_COMB_ID = VCC.CODE_COMBINATION_ID AND IBMT.INV_BOOK_ID = MT.INV_BOOK_ID AND ITEMS_MT.ITEM_ID = ISS_DET.ITEM_ID AND ITEMS_MT.ITEM_TYPE_ID = ITEM_TYPE.ITEM_TYPE_ID AND IBMT.SUB_INV_ID = SUB_INV.SUB_INV_ID AND ISS_DET.ISS_TRANS_ID = ISS_MT.ISS_TRANS_ID AND ISS_MT.INV_BOOK_ID = ISS_BOOK_ID.INV_BOOK_ID AND ISS_BOOK_ID.SUB_INV_ID = FRM_SUB_INV.SUB_INV_ID AND MT.RECEIPT_DATE BETWEEN TO_DATE('$from', 'DD-MM-YY') AND TO_DATE('$to', 'DD-MM-YY') AND ITEMS_MT.ITEM_CODE BETWEEN '$item_code_from' AND '$item_code_to'UNION ALL SELECT SUB_INV.qty_decimal_places, SUB_INV.SUB_INV_DESC, IBMT.SHORT_DESC TYPE, 1 INOUT, MT.ADJUSTMENT_NO DOC_NUMBER, NULL REF_NO, DET.ITEM_ID, MT.ITEM_ADJUSTMENT_ID MASTER_ID, MT.ADJUSTMENT_DATE DOC_DATE, DET.ITEM_ADJUSTMENT_DET_ID, (NVL(DET.PRIMARY_QTY, 0)) QTY, (NVL(DET.LINE_AMOUNT, 0)) AMOUNT, MT.INV_TRANSACTION_NO, VCC.CODE_DESC DESCRIPTION, DECODE(DET.PRIMARY_QTY + ABS(DET.PRIMARY_QTY), 0, 2, 0) FLAG FROM item_adjustment_mt     MT, item_adjustment_det    DET, VIEW_CODE_COMBINATIONS VCC, INV_BOOKS_MT           IBMT, ITEMS_MT, WIZ_ITEM_TYPE_MT       ITEM_TYPE, SUB_INVENTORY_MT       SUB_INV WHERE MT.ITEM_ADJUSTMENT_ID = det.item_adjustment_id AND DET.LOC_CODE_COMB_ID = VCC.CODE_COMBINATION_ID AND IBMT.INV_BOOK_ID = MT.INV_BOOK_ID AND ITEMS_MT.ITEM_ID = DET.ITEM_ID AND ITEMS_MT.ITEM_TYPE_ID = ITEM_TYPE.ITEM_TYPE_ID AND IBMT.SUB_INV_ID = SUB_INV.SUB_INV_ID AND MT.ADJUSTMENT_DATE BETWEEN TO_DATE('$from', 'DD-MM-YY') AND TO_DATE('$to', 'DD-MM-YY') AND ITEMS_MT.ITEM_CODE BETWEEN '$item_code_from' AND '$item_code_to') TRANS, (SELECT ITEMS.ITEM_ID, PCKG_INV.GET_BALANCE_QTY(2, '01-JAN-16', NULL, 1, 1, ITEMS.ITEM_ID, '30-Jun-17', NULL) QTY, PCKG_INV.GET_BALANCE_AMOUNT(2, '01-JAN-16', NULL, 1, 1, ITEMS.ITEM_ID, '30-Jun-17', NULL) AMOUNT FROM ITEMS_MT ITEMS WHERE 1 = 1 AND ITEMS.ITEM_CODE BETWEEN '0001-0001-0455' AND '0001-0001-0670') OPENING WHERE ITEMS_MT.ITEM_ID = TRANS.ITEM_ID(+) AND ITEMS_MT.ITEM_ID = OPENING.ITEM_ID(+) AND PRI_UOM.UOM_ID = ITEMS_MT.PRIMARY_UOM AND ITEMS_MT.INV_VAL_ID = INV_VAL.INV_VAL_ID AND ITEMS_MT.ITEM_TYPE_ID = ITEM_TYPE.ITEM_TYPE_ID AND ITEMS_MT.ITEM_CODE BETWEEN '0001-0001-0455' AND '0001-0001-0670'ORDER BY TRANS.DOC_DATE, FLAG || TRANS.INV_TRANSACTION_NO";

        if (!empty($requestData['search']['value'])) { // if there is a search parameter, $requestData['search']['value'] contains search parameter
      $sql .= " WHERE ( DOC_DATE LIKE '%" . $requestData['search']['value'] . "%' ";
      $sql .= " OR TYPE LIKE '" . $requestData['search']['value'] . "' ";
      $sql .= " OR DESCRIPTION LIKE '" . $requestData['search']['value'] . "' ";
    }
   $sql = "SELECT  * FROM    (SELECT  q.*, ROWNUM rn FROM ($sql) q ) WHERE   ROWNUM <= ".$requestData['length']." AND rn >= ".$requestData['start'];
    $query         = $this->db->query($sql);
    $data          = array();
    foreach ($query->result_array() as $row) { // preparing an array
      $nestedData   = array();
      $inout 		= $row['INOUT'];
      //$runningQty=0;
      //$runningRate=0;
      //$runningAmount=0;
      if ($inout==1) {
	    $nestedData[] = $row["DOC_DATE"];
	    $nestedData[] = $row["TYPE"];
	    $nestedData[] = $row["DESCRIPTION"];
	    $nestedData[] = $row["QTY"];
	    $nestedData[] = $row["RATE"];
	    $nestedData[] = $row["AMOUNT"];
	    $nestedData[] = $row[""];
  		$nestedData[] = $row[""];
  		$nestedData[] = $row[""];
	  		if ($row["QTY"]  < 0) {
	  			$runningQty= $runningQty - $row["QTY"];
	  		}else {
	  			$runningQty= $runningQty + $row["QTY"];
	  		}

	  		if ($row["AMOUNT"]  < 0) {
	  			$runningAmount= $runningAmount - $row["AMOUNT"];
	  		}else {
	  			$runningAmount= $runningAmount + $row["AMOUNT"];
	  		}

	  		$nestedData[] = $runningQty;
	  		$nestedData[] = $runningAmount/$runningQty;
	  		$nestedData[] = $runningAmount;
      }else {
      	 	$nestedData[] = $row["DOC_DATE"];
		    $nestedData[] = $row["TYPE"];
		    $nestedData[] = $row["DESCRIPTION"];
		    $nestedData[] = $row[""];
	  		$nestedData[] = $row[""];
	  		$nestedData[] = $row[""];
		    $nestedData[] = $row["QTY"];
		    $nestedData[] = $row["RATE"];
	    	$nestedData[] = $row["AMOUNT"];
	  		if ($row["QTY"]  < 0) {
	  			$runningQty= $runningQty - $row["QTY"];
	  		}else {
	  			$runningQty= $runningQty + $row["QTY"];
	  		}

	  		if ($row["AMOUNT"]  < 0) {
	  			$runningAmount= $runningAmount - $row["AMOUNT"];
	  		}else {
	  			$runningAmount= $runningAmount + $row["AMOUNT"];
	  		}

	  		$nestedData[] = $runningQty;
	  		if ($runningQty > 0) {
	  			$nestedData[] = $runningAmount/$runningQty;
	  		}else {
	  			$nestedData[] = 0;
	  		}
	  		
	  		$nestedData[] = $runningAmount;
	  		
	    }
     
      //  $count_qry  = $this->db->query("SELECT COUNT(1) AS TOTAL_ROWS FROM LZ_BD_CATAG_DATA C WHERE C.MAIN_CATEGORY_ID = " . $row['CATEGORY_ID']);
      // $count        = $count_qry->result_array();
      // $nestedData[] = $count[0]['TOTAL_ROWS'];
      $data[]       = $nestedData;
    }
    $json_data = array(
      "draw" => intval($requestData['draw']), // for every request/draw by clientside , they send a number as a parameter, when they recieve a response/data they first check the draw number, so we are sending same number in draw. 
      "recordsTotal" => intval($totalData), // total number of records
      "recordsFiltered" => intval($totalFiltered), // total number of records after searching, if there is no searching then totalFiltered = totalData
      "data" => $data // total data array
    );
    return $json_data;
  }
	
}

 ?>
