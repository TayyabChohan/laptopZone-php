<?php 
// Test

	/**
	* m_reports Model
	*/
	class m_reports extends CI_Model
	{

		public function __construct(){
		parent::__construct();
		$this->load->database();
		
	}
	public function manifest_data(){

		$query = $this->db->query("select purchase_items.LZ_MANIFEST_ID,lm.loading_no,lm.purch_ref_no,lm.loading_date,purchase_items.ITEM_ID,i.item_desc,purchase_items.Purchase_QTY,purchase_items.Purchase_Value,purchase_items.cost_rate,List_Items.LIST_QTY,List_Items.List_Value,List_Items.Ebay_Item_Id,sale_qry.sale_qty,sale_qry.sale_amt,sale_qry.ebay_fee EBAY_FEE,sale_qry.ship_fee SHIP_FEE,sale_qry.paypal_fee PAYPAL_FEE,nvl(sale_qry.dc_amt, 0) + (nvl(sale_qry.ebay_fee, 0) + nvl(sale_qry.ship_fee, 0) + nvl(sale_qry.paypal_fee, 0)) cosg,sale_qry.sale_amt - (nvl(sale_qry.dc_amt, 0) + (nvl(sale_qry.ebay_fee, 0) + nvl(sale_qry.ship_fee, 0) + nvl(sale_qry.paypal_fee, 0))) PL, round(decode(sale_qry.sale_amt, 0, 0,  round(((sale_qry.sale_amt - (nvl(sale_qry.dc_amt, 0) + (nvl(sale_qry.ebay_fee, 0) + nvl(sale_qry.ship_fee, 0) + nvl(sale_qry.paypal_fee, 0)))) / sale_qry.sale_amt * 100))), 2) GP, Salvage_Items.Salvage_QTY, purchase_items.cost_rate * Salvage_Items.Salvage_QTY Salvage_value, i.item_code From (SELECT LM.LZ_MANIFEST_ID, IM.ITEM_ID, SUM(NVL(LD.AVAILABLE_QTY, 0)) Purchase_QTY, COUNT(DISTINCT IM.ITEM_ID) Purchase_NOI, (sum(LD.PO_DETAIL_RETIAL_PRICE * NVL(LD.AVAILABLE_QTY, 0))) Purchase_Value, sum(LD.PO_DETAIL_RETIAL_PRICE * NVL(LD.AVAILABLE_QTY, 0)) / SUM(NVL(LD.AVAILABLE_QTY, 0)) cost_rate FROM LZ_MANIFEST_MT LM, LZ_MANIFEST_DET LD, ITEMS_MT IM WHERE LM.LZ_MANIFEST_ID = LD.LZ_MANIFEST_ID AND IM.ITEM_CODE = LD.LAPTOP_ITEM_CODE group by LM.LZ_MANIFEST_ID, LM.LOADING_NO, LM.LOADING_DATE, IM.ITEM_ID) purchase_items, (SELECT T.LZ_MANIFEST_ID, T.Item_Id,T.Ebay_Item_Id, SUM(nvl(T.LIST_QTY, 0)) LIST_QTY, SUM(nvl(T.LIST_PRICE, 0) * nvl(T.LIST_QTY, 0)) LIST_Value, count(distinct(T.ITEM_ID)) LIST_NOI FROM EBAY_LIST_MT T WHERE upper(T.ENTRY_TYPE) = upper('l') GROUP BY T.LZ_MANIFEST_ID, T.ITEM_ID,T.Ebay_Item_Id) List_Items, (SELECT T.LZ_MANIFEST_ID, T.Item_Id, SUM(nvl(T.Salvage_Qty, 0)) Salvage_QTY, count(distinct(T.ITEM_ID)) Salvage_LIST_NOI FROM EBAY_LIST_MT T WHERE upper(T.ENTRY_TYPE) = upper('s') GROUP BY T.LZ_MANIFEST_ID, T.ITEM_ID) Salvage_Items, (select eb.lz_manifest_id, dd.item_id, sum(pd.qty) sale_qty, sum(pd.qty * (dd.line_amount / dd.primary_qty)) sale_amt, sum(sd.ebay_fee_perc) Ebay_FEE, sum(sd.shipping_charges) SHIP_FEE, sum(sd.paypal_per_trans_fee) PAYPAL_FEE, sum(pd.qty * (dd.cost_of_sale / dd.primary_qty)) dc_amt from lz_sales_pulling      pm, lz_pull_manifest_bind pd, ebay_list_mt          eb, lz_salesload_mt       sm, lz_salesload_det      sd, dc_mt                 dm, dc_detail             dd where pm.pulling_id = pd.pulling_id and eb.list_id = pd.list_id and sm.lz_saleload_id = sd.lz_saleload_id and pm.sales_record_no = sd.sales_record_number and dm.dc_id = dd.dc_id and sd.gnrtd_dc_id = dm.dc_id and eb.entry_type = 'L' group by eb.lz_manifest_id, dd.item_id) sale_qry, items_mt i, lz_manifest_mt lm  Where purchase_items.LZ_MANIFEST_ID = List_Items.LZ_MANIFEST_ID(+) AND purchase_items.Item_Id = List_Items.Item_Id(+) AND purchase_items.Item_Id = i.item_id and purchase_items.LZ_MANIFEST_ID = lm.lz_manifest_id AND purchase_items.LZ_MANIFEST_ID = Salvage_Items.LZ_MANIFEST_ID(+) AND purchase_items.Item_Id = Salvage_Items.Item_Id(+) AND purchase_items.LZ_MANIFEST_ID = sale_qry.LZ_MANIFEST_ID(+) AND purchase_items.Item_Id = sale_qry.Item_Id(+)");
 			return $query->result_array();
		    

	}
	public function sum_data(){
	$query = $this->db->query("select sum(t.cost_rate) Total_cost,sum(t.List_Value) Total_List,sum(t.List_Qty) Total_List_Qty,sum(t.sale_amt) Total_Sale_Price,sum(t.sale_qty) Total_Sale_Qty,sum(t.ebay_fee) Total_EBAY_FEE,sum(t.ship_fee) Total_SHIP_FEE,sum(t.paypal_fee) Total_PAYPAL_FEE from (select purchase_items.LZ_MANIFEST_ID,lm.loading_no,lm.purch_ref_no,lm.loading_date,purchase_items.ITEM_ID,i.item_desc,purchase_items.Purchase_QTY,purchase_items.Purchase_Value,purchase_items.cost_rate,List_Items.LIST_QTY,List_Items.List_Value,List_Items.Ebay_Item_Id,sale_qry.sale_qty,sale_qry.sale_amt,sale_qry.ebay_fee EBAY_FEE,sale_qry.ship_fee SHIP_FEE,sale_qry.paypal_fee PAYPAL_FEE,nvl(sale_qry.dc_amt, 0) + (nvl(sale_qry.ebay_fee, 0) + nvl(sale_qry.ship_fee, 0) + nvl(sale_qry.paypal_fee, 0)) cosg,sale_qry.sale_amt - (nvl(sale_qry.dc_amt, 0) + (nvl(sale_qry.ebay_fee, 0) + nvl(sale_qry.ship_fee, 0) + nvl(sale_qry.paypal_fee, 0))) PL, round(decode(sale_qry.sale_amt, 0, 0,  round(((sale_qry.sale_amt - (nvl(sale_qry.dc_amt, 0) + (nvl(sale_qry.ebay_fee, 0) + nvl(sale_qry.ship_fee, 0) + nvl(sale_qry.paypal_fee, 0)))) / sale_qry.sale_amt * 100))), 2) GP, Salvage_Items.Salvage_QTY, purchase_items.cost_rate * Salvage_Items.Salvage_QTY Salvage_value, i.item_code From (SELECT LM.LZ_MANIFEST_ID, IM.ITEM_ID, SUM(NVL(LD.AVAILABLE_QTY, 0)) Purchase_QTY, COUNT(DISTINCT IM.ITEM_ID) Purchase_NOI, (sum(LD.PO_DETAIL_RETIAL_PRICE * NVL(LD.AVAILABLE_QTY, 0))) Purchase_Value, sum(LD.PO_DETAIL_RETIAL_PRICE * NVL(LD.AVAILABLE_QTY, 0)) / SUM(NVL(LD.AVAILABLE_QTY, 0)) cost_rate FROM LZ_MANIFEST_MT LM, LZ_MANIFEST_DET LD, ITEMS_MT IM WHERE LM.LZ_MANIFEST_ID = LD.LZ_MANIFEST_ID AND IM.ITEM_CODE = LD.LAPTOP_ITEM_CODE group by LM.LZ_MANIFEST_ID, LM.LOADING_NO, LM.LOADING_DATE, IM.ITEM_ID) purchase_items, (SELECT T.LZ_MANIFEST_ID, T.Item_Id,T.Ebay_Item_Id, SUM(nvl(T.LIST_QTY, 0)) LIST_QTY, SUM(nvl(T.LIST_PRICE, 0) * nvl(T.LIST_QTY, 0)) LIST_Value, count(distinct(T.ITEM_ID)) LIST_NOI FROM EBAY_LIST_MT T WHERE upper(T.ENTRY_TYPE) = upper('l') GROUP BY T.LZ_MANIFEST_ID, T.ITEM_ID,T.Ebay_Item_Id) List_Items, (SELECT T.LZ_MANIFEST_ID, T.Item_Id, SUM(nvl(T.Salvage_Qty, 0)) Salvage_QTY, count(distinct(T.ITEM_ID)) Salvage_LIST_NOI FROM EBAY_LIST_MT T WHERE upper(T.ENTRY_TYPE) = upper('s') GROUP BY T.LZ_MANIFEST_ID, T.ITEM_ID) Salvage_Items, (select eb.lz_manifest_id, dd.item_id, sum(pd.qty) sale_qty, sum(pd.qty * (dd.line_amount / dd.primary_qty)) sale_amt, sum(sd.ebay_fee_perc) Ebay_FEE, sum(sd.shipping_charges) SHIP_FEE, sum(sd.paypal_per_trans_fee) PAYPAL_FEE, sum(pd.qty * (dd.cost_of_sale / dd.primary_qty)) dc_amt from lz_sales_pulling      pm, lz_pull_manifest_bind pd, ebay_list_mt          eb, lz_salesload_mt       sm, lz_salesload_det      sd, dc_mt                 dm, dc_detail             dd where pm.pulling_id = pd.pulling_id and eb.list_id = pd.list_id and sm.lz_saleload_id = sd.lz_saleload_id and pm.sales_record_no = sd.sales_record_number and dm.dc_id = dd.dc_id and sd.gnrtd_dc_id = dm.dc_id and eb.entry_type = 'L' group by eb.lz_manifest_id, dd.item_id) sale_qry, items_mt i, lz_manifest_mt lm  Where purchase_items.LZ_MANIFEST_ID = List_Items.LZ_MANIFEST_ID(+) AND purchase_items.Item_Id = List_Items.Item_Id(+) AND purchase_items.Item_Id = i.item_id and purchase_items.LZ_MANIFEST_ID = lm.lz_manifest_id AND purchase_items.LZ_MANIFEST_ID = Salvage_Items.LZ_MANIFEST_ID(+) AND purchase_items.Item_Id = Salvage_Items.Item_Id(+) AND purchase_items.LZ_MANIFEST_ID = sale_qry.LZ_MANIFEST_ID(+) AND purchase_items.Item_Id = sale_qry.Item_Id(+)) t");
 		return $query->result_array();

		   

	}
	public function search_sum_data($from,$to,$purchase_no,$manif_radio){
		$main_qry = "select sum(t.cost_rate) Total_cost,sum(t.List_Value) Total_List,sum(t.List_Qty) Total_List_Qty,sum(t.sale_amt) Total_Sale_Price,sum(t.sale_qty) Total_Sale_Qty,sum(t.ebay_fee) Total_EBAY_FEE,sum(t.ship_fee) Total_SHIP_FEE,sum(t.paypal_fee) Total_PAYPAL_FEE from (select purchase_items.LZ_MANIFEST_ID,lm.loading_no,lm.purch_ref_no,lm.loading_date,purchase_items.ITEM_ID,i.item_desc,purchase_items.Purchase_QTY,purchase_items.Purchase_Value,purchase_items.cost_rate,List_Items.LIST_QTY,List_Items.List_Value,List_Items.Ebay_Item_Id,sale_qry.sale_qty,sale_qry.sale_amt,sale_qry.ebay_fee EBAY_FEE,sale_qry.ship_fee SHIP_FEE,sale_qry.paypal_fee PAYPAL_FEE,nvl(sale_qry.dc_amt, 0) + (nvl(sale_qry.ebay_fee, 0) + nvl(sale_qry.ship_fee, 0) + nvl(sale_qry.paypal_fee, 0)) cosg,sale_qry.sale_amt - (nvl(sale_qry.dc_amt, 0) + (nvl(sale_qry.ebay_fee, 0) + nvl(sale_qry.ship_fee, 0) + nvl(sale_qry.paypal_fee, 0))) PL, round(decode(sale_qry.sale_amt, 0, 0,  round(((sale_qry.sale_amt - (nvl(sale_qry.dc_amt, 0) + (nvl(sale_qry.ebay_fee, 0) + nvl(sale_qry.ship_fee, 0) + nvl(sale_qry.paypal_fee, 0)))) / sale_qry.sale_amt * 100))), 2) GP, Salvage_Items.Salvage_QTY, purchase_items.cost_rate * Salvage_Items.Salvage_QTY Salvage_value, i.item_code From (SELECT LM.LZ_MANIFEST_ID, IM.ITEM_ID, SUM(NVL(LD.AVAILABLE_QTY, 0)) Purchase_QTY, COUNT(DISTINCT IM.ITEM_ID) Purchase_NOI, (sum(LD.PO_DETAIL_RETIAL_PRICE * NVL(LD.AVAILABLE_QTY, 0))) Purchase_Value, sum(LD.PO_DETAIL_RETIAL_PRICE * NVL(LD.AVAILABLE_QTY, 0)) / SUM(NVL(LD.AVAILABLE_QTY, 0)) cost_rate FROM LZ_MANIFEST_MT LM, LZ_MANIFEST_DET LD, ITEMS_MT IM WHERE LM.LZ_MANIFEST_ID = LD.LZ_MANIFEST_ID AND IM.ITEM_CODE = LD.LAPTOP_ITEM_CODE group by LM.LZ_MANIFEST_ID, LM.LOADING_NO, LM.LOADING_DATE, IM.ITEM_ID) purchase_items, (SELECT T.LZ_MANIFEST_ID, T.Item_Id,T.Ebay_Item_Id, SUM(nvl(T.LIST_QTY, 0)) LIST_QTY, SUM(nvl(T.LIST_PRICE, 0) * nvl(T.LIST_QTY, 0)) LIST_Value, count(distinct(T.ITEM_ID)) LIST_NOI FROM EBAY_LIST_MT T WHERE upper(T.ENTRY_TYPE) = upper('l') GROUP BY T.LZ_MANIFEST_ID, T.ITEM_ID,T.Ebay_Item_Id) List_Items, (SELECT T.LZ_MANIFEST_ID, T.Item_Id, SUM(nvl(T.Salvage_Qty, 0)) Salvage_QTY, count(distinct(T.ITEM_ID)) Salvage_LIST_NOI FROM EBAY_LIST_MT T WHERE upper(T.ENTRY_TYPE) = upper('s') GROUP BY T.LZ_MANIFEST_ID, T.ITEM_ID) Salvage_Items, (select eb.lz_manifest_id, dd.item_id, sum(pd.qty) sale_qty, sum(pd.qty * (dd.line_amount / dd.primary_qty)) sale_amt, sum(sd.ebay_fee_perc) Ebay_FEE, sum(sd.shipping_charges) SHIP_FEE, sum(sd.paypal_per_trans_fee) PAYPAL_FEE, sum(pd.qty * (dd.cost_of_sale / dd.primary_qty)) dc_amt from lz_sales_pulling      pm, lz_pull_manifest_bind pd, ebay_list_mt          eb, lz_salesload_mt       sm, lz_salesload_det      sd, dc_mt                 dm, dc_detail             dd where pm.pulling_id = pd.pulling_id and eb.list_id = pd.list_id and sm.lz_saleload_id = sd.lz_saleload_id and pm.sales_record_no = sd.sales_record_number and dm.dc_id = dd.dc_id and sd.gnrtd_dc_id = dm.dc_id and eb.entry_type = 'L' group by eb.lz_manifest_id, dd.item_id) sale_qry, items_mt i, lz_manifest_mt lm  Where purchase_items.LZ_MANIFEST_ID = List_Items.LZ_MANIFEST_ID(+) AND purchase_items.Item_Id = List_Items.Item_Id(+) AND purchase_items.Item_Id = i.item_id and purchase_items.LZ_MANIFEST_ID = lm.lz_manifest_id AND purchase_items.LZ_MANIFEST_ID = Salvage_Items.LZ_MANIFEST_ID(+) AND purchase_items.Item_Id = Salvage_Items.Item_Id(+) AND purchase_items.LZ_MANIFEST_ID = sale_qry.LZ_MANIFEST_ID(+) AND purchase_items.Item_Id = sale_qry.Item_Id(+)";
		$date_qry = "AND lm.loading_date between TO_DATE('$from "."00:00:00','DD-MM-YY HH24:MI:SS') and TO_DATE('$to ". "23:59:59','DD-MM-YY HH24:MI:SS')";
		$sub_qry="";
		
		if($manif_radio == 'active'){
			 $sub_qry= "AND sale_qry.sale_amt is null AND List_Items.Ebay_Item_Id is not null";
			 $this->session->set_userdata('manif', $manif_radio);
		}elseif($manif_radio == 'sold'){
			$sub_qry = "AND sale_qry.sale_amt is not null";
			$this->session->set_userdata('manif', $manif_radio);
		}elseif($manif_radio == 'Both'){
			$sub_qry = "";
			$this->session->set_userdata('manif', $manif_radio);
		}
		if(!empty($purchase_no)){
		$purchase_no = "AND lm.purch_ref_no = '$purchase_no'";
	}else{
		$purchase_no = "";
	}
	$query = $this->db->query($main_qry." ".$date_qry." ".$sub_qry." ".$purchase_no.") t");
 		return $query->result_array();

		   

	}

	public function search_manifest_data($from,$to,$purchase_no,$manif_radio){
		$main_qry = "select purchase_items.LZ_MANIFEST_ID,lm.loading_no,lm.purch_ref_no,lm.loading_date,purchase_items.ITEM_ID,i.item_desc,purchase_items.Purchase_QTY,purchase_items.Purchase_Value,purchase_items.cost_rate,List_Items.LIST_QTY,List_Items.List_Value,List_Items.Ebay_Item_Id,sale_qry.sale_qty,sale_qry.sale_amt,sale_qry.ebay_fee EBAY_FEE,sale_qry.ship_fee SHIP_FEE,sale_qry.paypal_fee PAYPAL_FEE,nvl(sale_qry.dc_amt, 0) + (nvl(sale_qry.ebay_fee, 0) + nvl(sale_qry.ship_fee, 0) + nvl(sale_qry.paypal_fee, 0)) cosg,sale_qry.sale_amt - (nvl(sale_qry.dc_amt, 0) + (nvl(sale_qry.ebay_fee, 0) + nvl(sale_qry.ship_fee, 0) + nvl(sale_qry.paypal_fee, 0))) PL, round(decode(sale_qry.sale_amt, 0, 0,  round(((sale_qry.sale_amt - (nvl(sale_qry.dc_amt, 0) + (nvl(sale_qry.ebay_fee, 0) + nvl(sale_qry.ship_fee, 0) + nvl(sale_qry.paypal_fee, 0)))) / sale_qry.sale_amt * 100))), 2) GP, Salvage_Items.Salvage_QTY, purchase_items.cost_rate * Salvage_Items.Salvage_QTY Salvage_value, i.item_code From (SELECT LM.LZ_MANIFEST_ID, IM.ITEM_ID, SUM(NVL(LD.AVAILABLE_QTY, 0)) Purchase_QTY, COUNT(DISTINCT IM.ITEM_ID) Purchase_NOI, (sum(LD.PO_DETAIL_RETIAL_PRICE * NVL(LD.AVAILABLE_QTY, 0))) Purchase_Value, sum(LD.PO_DETAIL_RETIAL_PRICE * NVL(LD.AVAILABLE_QTY, 0)) / SUM(NVL(LD.AVAILABLE_QTY, 0)) cost_rate FROM LZ_MANIFEST_MT LM, LZ_MANIFEST_DET LD, ITEMS_MT IM WHERE LM.LZ_MANIFEST_ID = LD.LZ_MANIFEST_ID AND IM.ITEM_CODE = LD.LAPTOP_ITEM_CODE group by LM.LZ_MANIFEST_ID, LM.LOADING_NO, LM.LOADING_DATE, IM.ITEM_ID) purchase_items, (SELECT T.LZ_MANIFEST_ID, T.Item_Id,T.Ebay_Item_Id, SUM(nvl(T.LIST_QTY, 0)) LIST_QTY, SUM(nvl(T.LIST_PRICE, 0) * nvl(T.LIST_QTY, 0)) LIST_Value, count(distinct(T.ITEM_ID)) LIST_NOI FROM EBAY_LIST_MT T WHERE upper(T.ENTRY_TYPE) = upper('l') GROUP BY T.LZ_MANIFEST_ID, T.ITEM_ID,T.Ebay_Item_Id) List_Items, (SELECT T.LZ_MANIFEST_ID, T.Item_Id, SUM(nvl(T.Salvage_Qty, 0)) Salvage_QTY, count(distinct(T.ITEM_ID)) Salvage_LIST_NOI FROM EBAY_LIST_MT T WHERE upper(T.ENTRY_TYPE) = upper('s') GROUP BY T.LZ_MANIFEST_ID, T.ITEM_ID) Salvage_Items, (select eb.lz_manifest_id, dd.item_id, sum(pd.qty) sale_qty, sum(pd.qty * (dd.line_amount / dd.primary_qty)) sale_amt, sum(sd.ebay_fee_perc) Ebay_FEE, sum(sd.shipping_charges) SHIP_FEE, sum(sd.paypal_per_trans_fee) PAYPAL_FEE, sum(pd.qty * (dd.cost_of_sale / dd.primary_qty)) dc_amt from lz_sales_pulling      pm, lz_pull_manifest_bind pd, ebay_list_mt          eb, lz_salesload_mt       sm, lz_salesload_det      sd, dc_mt                 dm, dc_detail             dd where pm.pulling_id = pd.pulling_id and eb.list_id = pd.list_id and sm.lz_saleload_id = sd.lz_saleload_id and pm.sales_record_no = sd.sales_record_number and dm.dc_id = dd.dc_id and sd.gnrtd_dc_id = dm.dc_id and eb.entry_type = 'L' group by eb.lz_manifest_id, dd.item_id) sale_qry, items_mt i, lz_manifest_mt lm  Where purchase_items.LZ_MANIFEST_ID = List_Items.LZ_MANIFEST_ID(+) AND purchase_items.Item_Id = List_Items.Item_Id(+) AND purchase_items.Item_Id = i.item_id and purchase_items.LZ_MANIFEST_ID = lm.lz_manifest_id AND purchase_items.LZ_MANIFEST_ID = Salvage_Items.LZ_MANIFEST_ID(+) AND purchase_items.Item_Id = Salvage_Items.Item_Id(+) AND purchase_items.LZ_MANIFEST_ID = sale_qry.LZ_MANIFEST_ID(+) AND purchase_items.Item_Id = sale_qry.Item_Id(+)";
		$date_qry = "AND lm.loading_date between TO_DATE('$from "."00:00:00','DD-MM-YY HH24:MI:SS') and TO_DATE('$to ". "23:59:59','DD-MM-YY HH24:MI:SS')";
		$sub_qry="";
		
		if($manif_radio == 'active'){
			 $sub_qry= "AND sale_qry.sale_amt is null AND List_Items.Ebay_Item_Id is not null";
			 $this->session->set_userdata('manif', $manif_radio);
		}elseif($manif_radio == 'sold'){
			$sub_qry = "AND sale_qry.sale_amt is not null";
			$this->session->set_userdata('manif', $manif_radio);
		}elseif($manif_radio == 'Both'){
			$sub_qry = "";
			$this->session->set_userdata('manif', $manif_radio);
		}
		if(!empty($purchase_no)){
		$purchase_no = "AND lm.purch_ref_no = '$purchase_no'";
	}else{
		$purchase_no = "";
	}
	$query = $this->db->query($main_qry." ".$date_qry." ".$sub_qry." ".$purchase_no);
 		return $query->result_array();

	}	
	
	}
// ================= Sum Query ===================
	//select sum(t.cost_rate) Total_cost,sum(t.List_Value) Total_List,sum(t.List_Qty) Total_List_Qty,sum(t.sale_amt) Total_Sale_Price,sum(t.sale_qty) Total_Sale_Qty,sum(t.ebay_fee) Total_EBAY_FEE,sum(t.ship_fee) Total_SHIP_FEE,sum(t.paypal_fee) Total_PAYPAL_FEE from (select purchase_items.LZ_MANIFEST_ID,lm.loading_no,lm.purch_ref_no,lm.loading_date,purchase_items.ITEM_ID,i.item_desc,purchase_items.Purchase_QTY,purchase_items.Purchase_Value,purchase_items.cost_rate,List_Items.LIST_QTY,List_Items.List_Value,List_Items.Ebay_Item_Id,sale_qry.sale_qty,sale_qry.sale_amt,sale_qry.ebay_fee EBAY_FEE,sale_qry.ship_fee SHIP_FEE,sale_qry.paypal_fee PAYPAL_FEE,nvl(sale_qry.dc_amt, 0) + (nvl(sale_qry.ebay_fee, 0) + nvl(sale_qry.ship_fee, 0) + nvl(sale_qry.paypal_fee, 0)) cosg,sale_qry.sale_amt - (nvl(sale_qry.dc_amt, 0) + (nvl(sale_qry.ebay_fee, 0) + nvl(sale_qry.ship_fee, 0) + nvl(sale_qry.paypal_fee, 0))) PL, round(decode(sale_qry.sale_amt, 0, 0,  round(((sale_qry.sale_amt - (nvl(sale_qry.dc_amt, 0) + (nvl(sale_qry.ebay_fee, 0) + nvl(sale_qry.ship_fee, 0) + nvl(sale_qry.paypal_fee, 0)))) / sale_qry.sale_amt * 100))), 2) GP, Salvage_Items.Salvage_QTY, purchase_items.cost_rate * Salvage_Items.Salvage_QTY Salvage_value, i.item_code From (SELECT LM.LZ_MANIFEST_ID, IM.ITEM_ID, SUM(NVL(LD.AVAILABLE_QTY, 0)) Purchase_QTY, COUNT(DISTINCT IM.ITEM_ID) Purchase_NOI, (sum(LD.PO_DETAIL_RETIAL_PRICE * NVL(LD.AVAILABLE_QTY, 0))) Purchase_Value, sum(LD.PO_DETAIL_RETIAL_PRICE * NVL(LD.AVAILABLE_QTY, 0)) / SUM(NVL(LD.AVAILABLE_QTY, 0)) cost_rate FROM LZ_MANIFEST_MT LM, LZ_MANIFEST_DET LD, ITEMS_MT IM WHERE LM.LZ_MANIFEST_ID = LD.LZ_MANIFEST_ID AND IM.ITEM_CODE = LD.LAPTOP_ITEM_CODE group by LM.LZ_MANIFEST_ID, LM.LOADING_NO, LM.LOADING_DATE, IM.ITEM_ID) purchase_items, (SELECT T.LZ_MANIFEST_ID, T.Item_Id,T.Ebay_Item_Id, SUM(nvl(T.LIST_QTY, 0)) LIST_QTY, SUM(nvl(T.LIST_PRICE, 0) * nvl(T.LIST_QTY, 0)) LIST_Value, count(distinct(T.ITEM_ID)) LIST_NOI FROM EBAY_LIST_MT T WHERE upper(T.ENTRY_TYPE) = upper('l') GROUP BY T.LZ_MANIFEST_ID, T.ITEM_ID,T.Ebay_Item_Id) List_Items, (SELECT T.LZ_MANIFEST_ID, T.Item_Id, SUM(nvl(T.Salvage_Qty, 0)) Salvage_QTY, count(distinct(T.ITEM_ID)) Salvage_LIST_NOI FROM EBAY_LIST_MT T WHERE upper(T.ENTRY_TYPE) = upper('s') GROUP BY T.LZ_MANIFEST_ID, T.ITEM_ID) Salvage_Items, (select eb.lz_manifest_id, dd.item_id, sum(pd.qty) sale_qty, sum(pd.qty * (dd.line_amount / dd.primary_qty)) sale_amt, sum(sd.ebay_fee_perc) Ebay_FEE, sum(sd.shipping_charges) SHIP_FEE, sum(sd.paypal_per_trans_fee) PAYPAL_FEE, sum(pd.qty * (dd.cost_of_sale / dd.primary_qty)) dc_amt from lz_sales_pulling      pm, lz_pull_manifest_bind pd, ebay_list_mt          eb, lz_salesload_mt       sm, lz_salesload_det      sd, dc_mt                 dm, dc_detail             dd where pm.pulling_id = pd.pulling_id and eb.list_id = pd.list_id and sm.lz_saleload_id = sd.lz_saleload_id and pm.sales_record_no = sd.sales_record_number and dm.dc_id = dd.dc_id and sd.gnrtd_dc_id = dm.dc_id and eb.entry_type = 'L' group by eb.lz_manifest_id, dd.item_id) sale_qry, items_mt i, lz_manifest_mt lm  Where purchase_items.LZ_MANIFEST_ID = List_Items.LZ_MANIFEST_ID(+) AND purchase_items.Item_Id = List_Items.Item_Id(+) AND purchase_items.Item_Id = i.item_id and purchase_items.LZ_MANIFEST_ID = lm.lz_manifest_id AND purchase_items.LZ_MANIFEST_ID = Salvage_Items.LZ_MANIFEST_ID(+) AND purchase_items.Item_Id = Salvage_Items.Item_Id(+) AND purchase_items.LZ_MANIFEST_ID = sale_qry.LZ_MANIFEST_ID(+) AND purchase_items.Item_Id = sale_qry.Item_Id(+)) t

 ?>
